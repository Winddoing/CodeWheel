#ifndef GLHOOK_ALL_EXTERN_H
#define GLHOOK_ALL_EXTERN_H

#include <GL/gl.h>
#include <GL/glx.h>
#include <EGL/egl.h>
#include <EGL/eglext.h>
#include <dlfcn.h>

extern void* dlwrap_real_dlsym(void *handle, const char *name);

typedef __eglMustCastToProperFunctionPointerType (*eglGPA_t)(const char *procname);
extern __eglMustCastToProperFunctionPointerType eglGetProcAddress (const char *procname);

typedef void (*__GLXextFuncPtr)(void);
typedef __GLXextFuncPtr (*glxGPA_t)(const GLubyte *fname);
extern __GLXextFuncPtr glXGetProcAddressARB (const GLubyte *fname);
extern __GLXextFuncPtr glXGetProcAddress (const GLubyte *fname);

typedef int GLclampx;
typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (APIENTRY *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);


extern XVisualInfo* glXChooseVisual( Display *dpy, int screen, int *attribList );
extern GLXContext glXCreateContext( Display *dpy, XVisualInfo *vis, GLXContext shareList, Bool direct );
extern void glXDestroyContext( Display *dpy, GLXContext ctx );
extern Bool glXMakeCurrent( Display *dpy, GLXDrawable drawable, GLXContext ctx);
extern void glXCopyContext( Display *dpy, GLXContext src, GLXContext dst, unsigned long mask );
extern void glXSwapBuffers( Display *dpy, GLXDrawable drawable );
extern GLXPixmap glXCreateGLXPixmap( Display *dpy, XVisualInfo *visual, Pixmap pixmap );
extern void glXDestroyGLXPixmap( Display *dpy, GLXPixmap pixmap );
extern Bool glXQueryExtension( Display *dpy, int *errorb, int *event );
extern Bool glXQueryVersion( Display *dpy, int *maj, int *min );
extern Bool glXIsDirect( Display *dpy, GLXContext ctx );
extern int glXGetConfig( Display *dpy, XVisualInfo *visual, int attrib, int *value );
extern GLXContext glXGetCurrentContext( void );
extern GLXDrawable glXGetCurrentDrawable( void );
extern void glXWaitGL( void );
extern void glXWaitX( void );
extern void glXUseXFont( Font font, int first, int count, int list );

/* GLX 1.1 and later */
extern const char *glXQueryExtensionsString( Display *dpy, int screen );
extern const char *glXQueryServerString( Display *dpy, int screen, int name );
extern const char *glXGetClientString( Display *dpy, int name );

/* GLX 1.2 and later */
extern Display *glXGetCurrentDisplay( void );

/* GLX 1.3 and later */
extern GLXFBConfig *glXChooseFBConfig( Display *dpy, int screen, const int *attribList, int *nitems );
extern int glXGetFBConfigAttrib( Display *dpy, GLXFBConfig config, int attribute, int *value );
extern GLXFBConfig *glXGetFBConfigs( Display *dpy, int screen, int *nelements );
extern XVisualInfo *glXGetVisualFromFBConfig( Display *dpy, GLXFBConfig config );
extern GLXWindow glXCreateWindow( Display *dpy, GLXFBConfig config, Window win, const int *attribList );
extern void glXDestroyWindow( Display *dpy, GLXWindow window );
extern GLXPixmap glXCreatePixmap( Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attribList );
extern void glXDestroyPixmap( Display *dpy, GLXPixmap pixmap );
extern GLXPbuffer glXCreatePbuffer( Display *dpy, GLXFBConfig config, const int *attribList );
extern void glXDestroyPbuffer( Display *dpy, GLXPbuffer pbuf );
extern void glXQueryDrawable( Display *dpy, GLXDrawable draw, int attribute, unsigned int *value );
extern GLXContext glXCreateNewContext( Display *dpy, GLXFBConfig config, int renderType, GLXContext shareList, Bool direct );
extern Bool glXMakeContextCurrent( Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx );
extern GLXDrawable glXGetCurrentReadDrawable( void );
extern int glXQueryContext( Display *dpy, GLXContext ctx, int attribute, int *value );
extern void glXSelectEvent( Display *dpy, GLXDrawable drawable, unsigned long mask );
extern void glXGetSelectedEvent( Display *dpy, GLXDrawable drawable, unsigned long *mask );

/*
 * ARB 2. GLX_ARB_get_proc_address
 */
extern __GLXextFuncPtr glXGetProcAddressARB (const GLubyte *);

/*
 *  Other GLX API
 */
extern GLXContext glXCreateContextAttribsARB(Display *dpy, GLXFBConfig config, GLXContext shareCtx, Bool direct, const int *attrib_list);

extern EGLBoolean eglChooseConfig (EGLDisplay dpy, const EGLint *attrib_list, EGLConfig *configs, EGLint config_size, EGLint *num_config);
extern EGLBoolean eglCopyBuffers (EGLDisplay dpy, EGLSurface surface, EGLNativePixmapType target);
extern EGLContext eglCreateContext (EGLDisplay dpy, EGLConfig config, EGLContext share_context, const EGLint *attrib_list);
extern EGLSurface eglCreatePbufferSurface (EGLDisplay dpy, EGLConfig config, const EGLint *attrib_list);
extern EGLSurface eglCreatePixmapSurface (EGLDisplay dpy, EGLConfig config, EGLNativePixmapType pixmap, const EGLint *attrib_list);
extern EGLSurface eglCreateWindowSurface (EGLDisplay dpy, EGLConfig config, EGLNativeWindowType win, const EGLint *attrib_list);
extern EGLBoolean eglDestroyContext (EGLDisplay dpy, EGLContext ctx);
extern EGLBoolean eglDestroySurface (EGLDisplay dpy, EGLSurface surface);
extern EGLBoolean eglGetConfigAttrib (EGLDisplay dpy, EGLConfig config, EGLint attribute, EGLint *value);
extern EGLBoolean eglGetConfigs (EGLDisplay dpy, EGLConfig *configs, EGLint config_size, EGLint *num_config);
extern EGLDisplay eglGetCurrentDisplay (void);
extern EGLSurface eglGetCurrentSurface (EGLint readdraw);
extern EGLDisplay eglGetDisplay (EGLNativeDisplayType display_id);
extern EGLint eglGetError (void);
extern __eglMustCastToProperFunctionPointerType eglGetProcAddress (const char *procname);
extern EGLBoolean eglInitialize (EGLDisplay dpy, EGLint *major, EGLint *minor);
extern EGLBoolean eglMakeCurrent (EGLDisplay dpy, EGLSurface draw, EGLSurface read, EGLContext ctx);
extern EGLBoolean eglQueryContext (EGLDisplay dpy, EGLContext ctx, EGLint attribute, EGLint *value);
extern const char * eglQueryString (EGLDisplay dpy, EGLint name);
extern EGLBoolean eglQuerySurface (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint *value);
extern EGLBoolean eglSwapBuffers (EGLDisplay dpy, EGLSurface surface);
extern EGLBoolean eglTerminate (EGLDisplay dpy);
extern EGLBoolean eglWaitGL (void);
extern EGLBoolean eglWaitNative (EGLint engine);
extern EGLBoolean eglBindTexImage (EGLDisplay dpy, EGLSurface surface, EGLint buffer);
extern EGLBoolean eglReleaseTexImage (EGLDisplay dpy, EGLSurface surface, EGLint buffer);
extern EGLBoolean eglSurfaceAttrib (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLint value);
extern EGLBoolean eglSwapInterval (EGLDisplay dpy, EGLint interval);
extern EGLBoolean eglBindAPI (EGLenum api);
extern EGLenum eglQueryAPI (void);
extern EGLSurface eglCreatePbufferFromClientBuffer (EGLDisplay dpy, EGLenum buftype, EGLClientBuffer buffer, EGLConfig config, const EGLint *attrib_list);
extern EGLBoolean eglReleaseThread (void);
extern EGLBoolean eglWaitClient (void);
extern EGLContext eglGetCurrentContext (void);
extern EGLSync eglCreateSync (EGLDisplay dpy, EGLenum type, const EGLAttrib *attrib_list);
extern EGLBoolean eglDestroySync (EGLDisplay dpy, EGLSync sync);
extern EGLint eglClientWaitSync (EGLDisplay dpy, EGLSync sync, EGLint flags, EGLTime timeout);
extern EGLBoolean eglGetSyncAttrib (EGLDisplay dpy, EGLSync sync, EGLint attribute, EGLAttrib *value);
extern EGLImage eglCreateImage (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLAttrib *attrib_list);
extern EGLBoolean eglDestroyImage (EGLDisplay dpy, EGLImage image);
extern EGLDisplay eglGetPlatformDisplay (EGLenum platform, void *native_display, const EGLAttrib *attrib_list);
extern EGLSurface eglCreatePlatformWindowSurface (EGLDisplay dpy, EGLConfig config, void *native_window, const EGLAttrib *attrib_list);
extern EGLSurface eglCreatePlatformPixmapSurface (EGLDisplay dpy, EGLConfig config, void *native_pixmap, const EGLAttrib *attrib_list);
extern EGLBoolean eglWaitSync (EGLDisplay dpy, EGLSync sync, EGLint flags);
extern EGLSyncKHR eglCreateSync64KHR (EGLDisplay dpy, EGLenum type, const EGLAttribKHR *attrib_list);
extern EGLint eglDebugMessageControlKHR (EGLDEBUGPROCKHR callback, const EGLAttrib *attrib_list);
extern EGLBoolean eglQueryDebugKHR (EGLint attribute, EGLAttrib *value);
extern EGLint eglLabelObjectKHR (EGLDisplay display, EGLenum objectType, EGLObjectKHR object, EGLLabelKHR label);
extern EGLBoolean eglQueryDisplayAttribKHR (EGLDisplay dpy, EGLint name, EGLAttrib *value);
extern EGLSyncKHR eglCreateSyncKHR (EGLDisplay dpy, EGLenum type, const EGLint *attrib_list);
extern EGLBoolean eglDestroySyncKHR (EGLDisplay dpy, EGLSyncKHR sync);
extern EGLint eglClientWaitSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, EGLTimeKHR timeout);
extern EGLBoolean eglGetSyncAttribKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint attribute, EGLint *value);
extern EGLImageKHR eglCreateImageKHR (EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list);
extern EGLBoolean eglDestroyImageKHR (EGLDisplay dpy, EGLImageKHR image);
extern EGLBoolean eglLockSurfaceKHR (EGLDisplay dpy, EGLSurface surface, const EGLint *attrib_list);
extern EGLBoolean eglUnlockSurfaceKHR (EGLDisplay dpy, EGLSurface surface);
extern EGLBoolean eglQuerySurface64KHR (EGLDisplay dpy, EGLSurface surface, EGLint attribute, EGLAttribKHR *value);
extern EGLBoolean eglSetDamageRegionKHR (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects);
extern EGLBoolean eglSignalSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode);
extern EGLStreamKHR eglCreateStreamKHR (EGLDisplay dpy, const EGLint *attrib_list);
extern EGLBoolean eglDestroyStreamKHR (EGLDisplay dpy, EGLStreamKHR stream);
extern EGLBoolean eglStreamAttribKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint value);
extern EGLBoolean eglQueryStreamKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLint *value);
extern EGLBoolean eglQueryStreamu64KHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLuint64KHR *value);
extern EGLStreamKHR eglCreateStreamAttribKHR (EGLDisplay dpy, const EGLAttrib *attrib_list);
extern EGLBoolean eglSetStreamAttribKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLAttrib value);
extern EGLBoolean eglQueryStreamAttribKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLAttrib *value);
extern EGLBoolean eglStreamConsumerAcquireAttribKHR (EGLDisplay dpy, EGLStreamKHR stream, const EGLAttrib *attrib_list);
extern EGLBoolean eglStreamConsumerReleaseAttribKHR (EGLDisplay dpy, EGLStreamKHR stream, const EGLAttrib *attrib_list);
extern EGLBoolean eglStreamConsumerGLTextureExternalKHR (EGLDisplay dpy, EGLStreamKHR stream);
extern EGLBoolean eglStreamConsumerAcquireKHR (EGLDisplay dpy, EGLStreamKHR stream);
extern EGLBoolean eglStreamConsumerReleaseKHR (EGLDisplay dpy, EGLStreamKHR stream);
extern EGLNativeFileDescriptorKHR eglGetStreamFileDescriptorKHR (EGLDisplay dpy, EGLStreamKHR stream);
extern EGLStreamKHR eglCreateStreamFromFileDescriptorKHR (EGLDisplay dpy, EGLNativeFileDescriptorKHR file_descriptor);
extern EGLBoolean eglQueryStreamTimeKHR (EGLDisplay dpy, EGLStreamKHR stream, EGLenum attribute, EGLTimeKHR *value);
extern EGLSurface eglCreateStreamProducerSurfaceKHR (EGLDisplay dpy, EGLConfig config, EGLStreamKHR stream, const EGLint *attrib_list);
extern EGLBoolean eglSwapBuffersWithDamageKHR (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects);
extern EGLint eglWaitSyncKHR (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags);
extern void eglSetBlobCacheFuncsANDROID (EGLDisplay dpy, EGLSetBlobFuncANDROID set, EGLGetBlobFuncANDROID get);
extern EGLClientBuffer eglCreateNativeClientBufferANDROID (const EGLint *attrib_list);
extern EGLBoolean eglGetCompositorTimingSupportedANDROID (EGLDisplay dpy, EGLSurface surface, EGLint name);
extern EGLBoolean eglGetCompositorTimingANDROID (EGLDisplay dpy, EGLSurface surface, EGLint numTimestamps,  const EGLint *names, EGLnsecsANDROID *values);
extern EGLBoolean eglGetNextFrameIdANDROID (EGLDisplay dpy, EGLSurface surface, EGLuint64KHR *frameId);
extern EGLBoolean eglGetFrameTimestampSupportedANDROID (EGLDisplay dpy, EGLSurface surface, EGLint timestamp);
extern EGLBoolean eglGetFrameTimestampsANDROID (EGLDisplay dpy, EGLSurface surface, EGLuint64KHR frameId, EGLint numTimestamps,  const EGLint *timestamps, EGLnsecsANDROID *values);
//extern EGLClientBuffer eglGetNativeClientBufferANDROID (const struct AHardwareBuffer *buffer);
extern EGLint eglDupNativeFenceFDANDROID (EGLDisplay dpy, EGLSyncKHR sync);
extern EGLBoolean eglPresentationTimeANDROID (EGLDisplay dpy, EGLSurface surface, EGLnsecsANDROID time);
extern EGLBoolean eglQuerySurfacePointerANGLE (EGLDisplay dpy, EGLSurface surface, EGLint attribute, void **value);
extern EGLBoolean eglClientSignalSyncEXT (EGLDisplay dpy, EGLSync sync, const EGLAttrib *attrib_list);
extern EGLBoolean eglCompositorSetContextListEXT (const EGLint *external_ref_ids, EGLint num_entries);
extern EGLBoolean eglCompositorSetContextAttributesEXT (EGLint external_ref_id, const EGLint *context_attributes, EGLint num_entries);
extern EGLBoolean eglCompositorSetWindowListEXT (EGLint external_ref_id, const EGLint *external_win_ids, EGLint num_entries);
extern EGLBoolean eglCompositorSetWindowAttributesEXT (EGLint external_win_id, const EGLint *window_attributes, EGLint num_entries);
extern EGLBoolean eglCompositorBindTexWindowEXT (EGLint external_win_id);
extern EGLBoolean eglCompositorSetSizeEXT (EGLint external_win_id, EGLint width, EGLint height);
extern EGLBoolean eglCompositorSwapPolicyEXT (EGLint external_win_id, EGLint policy);
extern EGLBoolean eglQueryDeviceAttribEXT (EGLDeviceEXT device, EGLint attribute, EGLAttrib *value);
extern const char * eglQueryDeviceStringEXT (EGLDeviceEXT device, EGLint name);
extern EGLBoolean eglQueryDevicesEXT (EGLint max_devices, EGLDeviceEXT *devices, EGLint *num_devices);
extern EGLBoolean eglQueryDisplayAttribEXT (EGLDisplay dpy, EGLint attribute, EGLAttrib *value);
extern EGLBoolean eglQueryDmaBufFormatsEXT (EGLDisplay dpy, EGLint max_formats, EGLint *formats, EGLint *num_formats);
extern EGLBoolean eglQueryDmaBufModifiersEXT (EGLDisplay dpy, EGLint format, EGLint max_modifiers, EGLuint64KHR *modifiers, EGLBoolean *external_only, EGLint *num_modifiers);
extern EGLBoolean eglGetOutputLayersEXT (EGLDisplay dpy, const EGLAttrib *attrib_list, EGLOutputLayerEXT *layers, EGLint max_layers, EGLint *num_layers);
extern EGLBoolean eglGetOutputPortsEXT (EGLDisplay dpy, const EGLAttrib *attrib_list, EGLOutputPortEXT *ports, EGLint max_ports, EGLint *num_ports);
extern EGLBoolean eglOutputLayerAttribEXT (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint attribute, EGLAttrib value);
extern EGLBoolean eglQueryOutputLayerAttribEXT (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint attribute, EGLAttrib *value);
extern const char * eglQueryOutputLayerStringEXT (EGLDisplay dpy, EGLOutputLayerEXT layer, EGLint name);
extern EGLBoolean eglOutputPortAttribEXT (EGLDisplay dpy, EGLOutputPortEXT port, EGLint attribute, EGLAttrib value);
extern EGLBoolean eglQueryOutputPortAttribEXT (EGLDisplay dpy, EGLOutputPortEXT port, EGLint attribute, EGLAttrib *value);
extern const char * eglQueryOutputPortStringEXT (EGLDisplay dpy, EGLOutputPortEXT port, EGLint name);
extern EGLDisplay eglGetPlatformDisplayEXT (EGLenum platform, void *native_display, const EGLint *attrib_list);
extern EGLSurface eglCreatePlatformWindowSurfaceEXT (EGLDisplay dpy, EGLConfig config, void *native_window, const EGLint *attrib_list);
extern EGLSurface eglCreatePlatformPixmapSurfaceEXT (EGLDisplay dpy, EGLConfig config, void *native_pixmap, const EGLint *attrib_list);
extern EGLBoolean eglStreamConsumerOutputEXT (EGLDisplay dpy, EGLStreamKHR stream, EGLOutputLayerEXT layer);
extern EGLBoolean eglSwapBuffersWithDamageEXT (EGLDisplay dpy, EGLSurface surface, EGLint *rects, EGLint n_rects);
extern EGLBoolean eglUnsignalSyncEXT (EGLDisplay dpy, EGLSync sync, const EGLAttrib *attrib_list);
extern EGLSurface eglCreatePixmapSurfaceHI (EGLDisplay dpy, EGLConfig config, struct EGLClientPixmapHI *pixmap);
extern EGLImageKHR eglCreateDRMImageMESA (EGLDisplay dpy, const EGLint *attrib_list);
extern EGLBoolean eglExportDRMImageMESA (EGLDisplay dpy, EGLImageKHR image, EGLint *name, EGLint *handle, EGLint *stride);
extern EGLBoolean eglExportDMABUFImageQueryMESA (EGLDisplay dpy, EGLImageKHR image, int *fourcc, int *num_planes, EGLuint64KHR *modifiers);
extern EGLBoolean eglExportDMABUFImageMESA (EGLDisplay dpy, EGLImageKHR image, int *fds, EGLint *strides, EGLint *offsets);
extern char * eglGetDisplayDriverConfig (EGLDisplay dpy);
extern const char * eglGetDisplayDriverName (EGLDisplay dpy);
extern EGLBoolean eglSwapBuffersRegionNOK (EGLDisplay dpy, EGLSurface surface, EGLint numRects, const EGLint *rects);
extern EGLBoolean eglSwapBuffersRegion2NOK (EGLDisplay dpy, EGLSurface surface, EGLint numRects, const EGLint *rects);
extern EGLBoolean eglQueryNativeDisplayNV (EGLDisplay dpy, EGLNativeDisplayType *display_id);
extern EGLBoolean eglQueryNativeWindowNV (EGLDisplay dpy, EGLSurface surf, EGLNativeWindowType *window);
extern EGLBoolean eglQueryNativePixmapNV (EGLDisplay dpy, EGLSurface surf, EGLNativePixmapType *pixmap);
extern EGLBoolean eglPostSubBufferNV (EGLDisplay dpy, EGLSurface surface, EGLint x, EGLint y, EGLint width, EGLint height);
extern EGLBoolean eglStreamConsumerGLTextureExternalAttribsNV (EGLDisplay dpy, EGLStreamKHR stream, const EGLAttrib *attrib_list);
extern EGLBoolean eglStreamFlushNV (EGLDisplay dpy, EGLStreamKHR stream);
extern EGLBoolean eglQueryDisplayAttribNV (EGLDisplay dpy, EGLint attribute, EGLAttrib *value);
extern EGLBoolean eglSetStreamMetadataNV (EGLDisplay dpy, EGLStreamKHR stream, EGLint n, EGLint offset, EGLint size, const void *data);
extern EGLBoolean eglQueryStreamMetadataNV (EGLDisplay dpy, EGLStreamKHR stream, EGLenum name, EGLint n, EGLint offset, EGLint size, void *data);
extern EGLBoolean eglResetStreamNV (EGLDisplay dpy, EGLStreamKHR stream);
extern EGLSyncKHR eglCreateStreamSyncNV (EGLDisplay dpy, EGLStreamKHR stream, EGLenum type, const EGLint *attrib_list);
extern EGLSyncNV eglCreateFenceSyncNV (EGLDisplay dpy, EGLenum condition, const EGLint *attrib_list);
extern EGLBoolean eglDestroySyncNV (EGLSyncNV sync);
extern EGLBoolean eglFenceNV (EGLSyncNV sync);
extern EGLint eglClientWaitSyncNV (EGLSyncNV sync, EGLint flags, EGLTimeNV timeout);
extern EGLBoolean eglSignalSyncNV (EGLSyncNV sync, EGLenum mode);
extern EGLBoolean eglGetSyncAttribNV (EGLSyncNV sync, EGLint attribute, EGLint *value);
extern EGLuint64NV eglGetSystemTimeFrequencyNV (void);
extern EGLuint64NV eglGetSystemTimeNV (void);



extern void  glCullFace(GLenum mode);
extern void  glFrontFace(GLenum mode);
extern void  glHint(GLenum target, GLenum mode);
extern void  glLineWidth(GLfloat width);
extern void  glPointSize(GLfloat size);
extern void  glPolygonMode(GLenum face, GLenum mode);
extern void  glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glTexParameterf(GLenum target, GLenum pname, GLfloat param);
extern void  glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params);
extern void  glTexParameteri(GLenum target, GLenum pname, GLint param);
extern void  glTexParameteriv(GLenum target, GLenum pname, const GLint *params);
extern void  glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glDrawBuffer(GLenum buf);
extern void  glClear(GLbitfield mask);
extern void  glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void  glClearStencil(GLint s);
extern void  glClearDepth(GLdouble depth);
extern void  glStencilMask(GLuint mask);
extern void  glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern void  glDepthMask(GLboolean flag);
extern void  glDisable(GLenum cap);
extern void  glEnable(GLenum cap);
extern void  glFinish(void);
extern void  glFlush(void);
extern void  glBlendFunc(GLenum sfactor, GLenum dfactor);
extern void  glLogicOp(GLenum opcode);
extern void  glStencilFunc(GLenum func, GLint ref, GLuint mask);
extern void  glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
extern void  glDepthFunc(GLenum func);
extern void  glPixelStoref(GLenum pname, GLfloat param);
extern void  glPixelStorei(GLenum pname, GLint param);
extern void  glReadBuffer(GLenum src);
extern void  glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
extern void  glGetBooleanv(GLenum pname, GLboolean *data);
extern void  glGetDoublev(GLenum pname, GLdouble *data);
extern GLenum  glGetError(void);
extern void  glGetFloatv(GLenum pname, GLfloat *data);
extern void  glGetIntegerv(GLenum pname, GLint *data);
extern const GLubyte * glGetString(GLenum name);
extern void  glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
extern void  glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetTexParameteriv(GLenum target, GLenum pname, GLint *params);
extern void  glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params);
extern void  glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params);
extern GLboolean  glIsEnabled(GLenum cap);
extern void  glDepthRange(GLdouble n, GLdouble f);
extern void  glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glDrawElements(GLenum mode, GLsizei count, GLenum type, const void *indices);
extern void  glGetPointerv(GLenum pname, void **params);
extern void  glPolygonOffset(GLfloat factor, GLfloat units);
extern void  glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern void  glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern void  glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void  glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
extern void  glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
extern void  glBindTexture(GLenum target, GLuint texture);
extern void  glDeleteTextures(GLsizei n, const GLuint *textures);
extern void  glGenTextures(GLsizei n, GLuint *textures);
extern GLboolean  glIsTexture(GLuint texture);
extern void  glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
extern void  glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void  glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glActiveTexture(GLenum texture);
extern void  glSampleCoverage(GLfloat value, GLboolean invert);
extern void  glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
extern void  glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
extern void  glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
extern void  glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
extern void  glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
extern void  glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
extern void  glGetCompressedTexImage(GLenum target, GLint level, void *img);
extern void  glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern void  glMultiDrawArrays(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
extern void  glMultiDrawElements(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
extern void  glPointParameterf(GLenum pname, GLfloat param);
extern void  glPointParameterfv(GLenum pname, const GLfloat *params);
extern void  glPointParameteri(GLenum pname, GLint param);
extern void  glPointParameteriv(GLenum pname, const GLint *params);
extern void  glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void  glBlendEquation(GLenum mode);
extern void  glGenQueries(GLsizei n, GLuint *ids);
extern void  glDeleteQueries(GLsizei n, const GLuint *ids);
extern GLboolean  glIsQuery(GLuint id);
extern void  glBeginQuery(GLenum target, GLuint id);
extern void  glEndQuery(GLenum target);
extern void  glGetQueryiv(GLenum target, GLenum pname, GLint *params);
extern void  glGetQueryObjectiv(GLuint id, GLenum pname, GLint *params);
extern void  glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);
extern void  glBindBuffer(GLenum target, GLuint buffer);
extern void  glDeleteBuffers(GLsizei n, const GLuint *buffers);
extern void  glGenBuffers(GLsizei n, GLuint *buffers);
extern GLboolean  glIsBuffer(GLuint buffer);
extern void  glBufferData(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
extern void  glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
extern void  glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
extern void * glMapBuffer(GLenum target, GLenum access);
extern GLboolean  glUnmapBuffer(GLenum target);
extern void  glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params);
extern void  glGetBufferPointerv(GLenum target, GLenum pname, void **params);
extern void  glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
extern void  glDrawBuffers(GLsizei n, const GLenum *bufs);
extern void  glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern void  glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
extern void  glStencilMaskSeparate(GLenum face, GLuint mask);
extern void  glAttachShader(GLuint program, GLuint shader);
extern void  glBindAttribLocation(GLuint program, GLuint index, const GLchar *name);
extern void  glCompileShader(GLuint shader);
extern GLuint  glCreateProgram(void);
extern GLuint  glCreateShader(GLenum type);
extern void  glDeleteProgram(GLuint program);
extern void  glDeleteShader(GLuint shader);
extern void  glDetachShader(GLuint program, GLuint shader);
extern void  glDisableVertexAttribArray(GLuint index);
extern void  glEnableVertexAttribArray(GLuint index);
extern void  glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
extern void  glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
extern void  glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
extern GLint  glGetAttribLocation(GLuint program, const GLchar *name);
extern void  glGetProgramiv(GLuint program, GLenum pname, GLint *params);
extern void  glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void  glGetShaderiv(GLuint shader, GLenum pname, GLint *params);
extern void  glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void  glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
extern GLint  glGetUniformLocation(GLuint program, const GLchar *name);
extern void  glGetUniformfv(GLuint program, GLint location, GLfloat *params);
extern void  glGetUniformiv(GLuint program, GLint location, GLint *params);
extern void  glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble *params);
extern void  glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params);
extern void  glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params);
extern void  glGetVertexAttribPointerv(GLuint index, GLenum pname, void **pointer);
extern GLboolean  glIsProgram(GLuint program);
extern GLboolean  glIsShader(GLuint shader);
extern void  glLinkProgram(GLuint program);
extern void  glShaderSource(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
extern void  glUseProgram(GLuint program);
extern void  glUniform1f(GLint location, GLfloat v0);
extern void  glUniform2f(GLint location, GLfloat v0, GLfloat v1);
extern void  glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void  glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void  glUniform1i(GLint location, GLint v0);
extern void  glUniform2i(GLint location, GLint v0, GLint v1);
extern void  glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
extern void  glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void  glUniform1fv(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform2fv(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform3fv(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform4fv(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform1iv(GLint location, GLsizei count, const GLint *value);
extern void  glUniform2iv(GLint location, GLsizei count, const GLint *value);
extern void  glUniform3iv(GLint location, GLsizei count, const GLint *value);
extern void  glUniform4iv(GLint location, GLsizei count, const GLint *value);
extern void  glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glValidateProgram(GLuint program);
extern void  glVertexAttrib1d(GLuint index, GLdouble x);
extern void  glVertexAttrib1dv(GLuint index, const GLdouble *v);
extern void  glVertexAttrib1f(GLuint index, GLfloat x);
extern void  glVertexAttrib1fv(GLuint index, const GLfloat *v);
extern void  glVertexAttrib1s(GLuint index, GLshort x);
extern void  glVertexAttrib1sv(GLuint index, const GLshort *v);
extern void  glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
extern void  glVertexAttrib2dv(GLuint index, const GLdouble *v);
extern void  glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
extern void  glVertexAttrib2fv(GLuint index, const GLfloat *v);
extern void  glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
extern void  glVertexAttrib2sv(GLuint index, const GLshort *v);
extern void  glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void  glVertexAttrib3dv(GLuint index, const GLdouble *v);
extern void  glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void  glVertexAttrib3fv(GLuint index, const GLfloat *v);
extern void  glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
extern void  glVertexAttrib3sv(GLuint index, const GLshort *v);
extern void  glVertexAttrib4Nbv(GLuint index, const GLbyte *v);
extern void  glVertexAttrib4Niv(GLuint index, const GLint *v);
extern void  glVertexAttrib4Nsv(GLuint index, const GLshort *v);
extern void  glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void  glVertexAttrib4Nubv(GLuint index, const GLubyte *v);
extern void  glVertexAttrib4Nuiv(GLuint index, const GLuint *v);
extern void  glVertexAttrib4Nusv(GLuint index, const GLushort *v);
extern void  glVertexAttrib4bv(GLuint index, const GLbyte *v);
extern void  glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glVertexAttrib4dv(GLuint index, const GLdouble *v);
extern void  glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glVertexAttrib4fv(GLuint index, const GLfloat *v);
extern void  glVertexAttrib4iv(GLuint index, const GLint *v);
extern void  glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void  glVertexAttrib4sv(GLuint index, const GLshort *v);
extern void  glVertexAttrib4ubv(GLuint index, const GLubyte *v);
extern void  glVertexAttrib4uiv(GLuint index, const GLuint *v);
extern void  glVertexAttrib4usv(GLuint index, const GLushort *v);
extern void  glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
extern void  glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern void  glGetBooleani_v(GLenum target, GLuint index, GLboolean *data);
extern void  glGetIntegeri_v(GLenum target, GLuint index, GLint *data);
extern void  glEnablei(GLenum target, GLuint index);
extern void  glDisablei(GLenum target, GLuint index);
extern GLboolean  glIsEnabledi(GLenum target, GLuint index);
extern void  glBeginTransformFeedback(GLenum primitiveMode);
extern void  glEndTransformFeedback(void);
extern void  glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
extern void  glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
extern void  glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
extern void  glClampColor(GLenum target, GLenum clamp);
extern void  glBeginConditionalRender(GLuint id, GLenum mode);
extern void  glEndConditionalRender(void);
extern void  glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params);
extern void  glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params);
extern void  glVertexAttribI1i(GLuint index, GLint x);
extern void  glVertexAttribI2i(GLuint index, GLint x, GLint y);
extern void  glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
extern void  glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern void  glVertexAttribI1ui(GLuint index, GLuint x);
extern void  glVertexAttribI2ui(GLuint index, GLuint x, GLuint y);
extern void  glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
extern void  glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern void  glVertexAttribI1iv(GLuint index, const GLint *v);
extern void  glVertexAttribI2iv(GLuint index, const GLint *v);
extern void  glVertexAttribI3iv(GLuint index, const GLint *v);
extern void  glVertexAttribI4iv(GLuint index, const GLint *v);
extern void  glVertexAttribI1uiv(GLuint index, const GLuint *v);
extern void  glVertexAttribI2uiv(GLuint index, const GLuint *v);
extern void  glVertexAttribI3uiv(GLuint index, const GLuint *v);
extern void  glVertexAttribI4uiv(GLuint index, const GLuint *v);
extern void  glVertexAttribI4bv(GLuint index, const GLbyte *v);
extern void  glVertexAttribI4sv(GLuint index, const GLshort *v);
extern void  glVertexAttribI4ubv(GLuint index, const GLubyte *v);
extern void  glVertexAttribI4usv(GLuint index, const GLushort *v);
extern void  glGetUniformuiv(GLuint program, GLint location, GLuint *params);
extern void  glBindFragDataLocation(GLuint program, GLuint color, const GLchar *name);
extern GLint  glGetFragDataLocation(GLuint program, const GLchar *name);
extern void  glUniform1ui(GLint location, GLuint v0);
extern void  glUniform2ui(GLint location, GLuint v0, GLuint v1);
extern void  glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern void  glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern void  glUniform1uiv(GLint location, GLsizei count, const GLuint *value);
extern void  glUniform2uiv(GLint location, GLsizei count, const GLuint *value);
extern void  glUniform3uiv(GLint location, GLsizei count, const GLuint *value);
extern void  glUniform4uiv(GLint location, GLsizei count, const GLuint *value);
extern void  glTexParameterIiv(GLenum target, GLenum pname, const GLint *params);
extern void  glTexParameterIuiv(GLenum target, GLenum pname, const GLuint *params);
extern void  glGetTexParameterIiv(GLenum target, GLenum pname, GLint *params);
extern void  glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params);
extern void  glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value);
extern void  glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value);
extern void  glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value);
extern void  glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern const GLubyte * glGetStringi(GLenum name, GLuint index);
extern GLboolean  glIsRenderbuffer(GLuint renderbuffer);
extern void  glBindRenderbuffer(GLenum target, GLuint renderbuffer);
extern void  glDeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers);
extern void  glGenRenderbuffers(GLsizei n, GLuint *renderbuffers);
extern void  glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params);
extern GLboolean  glIsFramebuffer(GLuint framebuffer);
extern void  glBindFramebuffer(GLenum target, GLuint framebuffer);
extern void  glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers);
extern void  glGenFramebuffers(GLsizei n, GLuint *framebuffers);
extern GLenum  glCheckFramebufferStatus(GLenum target);
extern void  glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern void  glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void  glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void  glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern void  glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void  glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params);
extern void  glGenerateMipmap(GLenum target);
extern void  glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern void  glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern void  glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
extern void  glBindVertexArray(GLuint array);
extern void  glDeleteVertexArrays(GLsizei n, const GLuint *arrays);
extern void  glGenVertexArrays(GLsizei n, GLuint *arrays);
extern GLboolean  glIsVertexArray(GLuint array);
extern void  glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
extern void  glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
extern void  glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
extern void  glPrimitiveRestartIndex(GLuint index);
extern void  glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void  glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
extern void  glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
extern void  glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
extern GLuint  glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName);
extern void  glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
extern void  glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
extern void  glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
extern void  glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void  glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void  glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
extern void  glMultiDrawElementsBaseVertex(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
extern void  glProvokingVertex(GLenum mode);
extern GLsync  glFenceSync(GLenum condition, GLbitfield flags);
extern GLboolean  glIsSync(GLsync sync);
extern void  glDeleteSync(GLsync sync);
extern GLenum  glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern void  glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern void  glGetInteger64v(GLenum pname, GLint64 *data);
extern void  glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
extern void  glGetInteger64i_v(GLenum target, GLuint index, GLint64 *data);
extern void  glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 *params);
extern void  glTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void  glTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void  glGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val);
extern void  glSampleMaski(GLuint maskNumber, GLbitfield mask);
extern void  glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
extern GLint  glGetFragDataIndex(GLuint program, const GLchar *name);
extern void  glGenSamplers(GLsizei count, GLuint *samplers);
extern void  glDeleteSamplers(GLsizei count, const GLuint *samplers);
extern GLboolean  glIsSampler(GLuint sampler);
extern void  glBindSampler(GLuint unit, GLuint sampler);
extern void  glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
extern void  glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *param);
extern void  glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
extern void  glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *param);
extern void  glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint *param);
extern void  glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint *param);
extern void  glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint *params);
extern void  glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint *params);
extern void  glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat *params);
extern void  glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint *params);
extern void  glQueryCounter(GLuint id, GLenum target);
extern void  glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64 *params);
extern void  glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 *params);
extern void  glVertexAttribDivisor(GLuint index, GLuint divisor);
extern void  glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void  glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void  glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void  glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void  glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void  glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void  glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern void  glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
extern void  glMinSampleShading(GLfloat value);
extern void  glBlendEquationi(GLuint buf, GLenum mode);
extern void  glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern void  glBlendFunci(GLuint buf, GLenum src, GLenum dst);
extern void  glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void  glDrawArraysIndirect(GLenum mode, const void *indirect);
extern void  glDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect);
extern void  glUniform1d(GLint location, GLdouble x);
extern void  glUniform2d(GLint location, GLdouble x, GLdouble y);
extern void  glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z);
extern void  glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glUniform1dv(GLint location, GLsizei count, const GLdouble *value);
extern void  glUniform2dv(GLint location, GLsizei count, const GLdouble *value);
extern void  glUniform3dv(GLint location, GLsizei count, const GLdouble *value);
extern void  glUniform4dv(GLint location, GLsizei count, const GLdouble *value);
extern void  glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glGetUniformdv(GLuint program, GLint location, GLdouble *params);
extern GLint  glGetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar *name);
extern GLuint  glGetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar *name);
extern void  glGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
extern void  glGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
extern void  glGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
extern void  glUniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint *indices);
extern void  glGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint *params);
extern void  glGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
extern void  glPatchParameteri(GLenum pname, GLint value);
extern void  glPatchParameterfv(GLenum pname, const GLfloat *values);
extern void  glBindTransformFeedback(GLenum target, GLuint id);
extern void  glDeleteTransformFeedbacks(GLsizei n, const GLuint *ids);
extern void  glGenTransformFeedbacks(GLsizei n, GLuint *ids);
extern GLboolean  glIsTransformFeedback(GLuint id);
extern void  glPauseTransformFeedback(void);
extern void  glResumeTransformFeedback(void);
extern void  glDrawTransformFeedback(GLenum mode, GLuint id);
extern void  glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream);
extern void  glBeginQueryIndexed(GLenum target, GLuint index, GLuint id);
extern void  glEndQueryIndexed(GLenum target, GLuint index);
extern void  glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint *params);
extern void  glReleaseShaderCompiler(void);
extern void  glShaderBinary(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
extern void  glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
extern void  glDepthRangef(GLfloat n, GLfloat f);
extern void  glClearDepthf(GLfloat d);
extern void  glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
extern void  glProgramBinary(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
extern void  glProgramParameteri(GLuint program, GLenum pname, GLint value);
extern void  glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
extern void  glActiveShaderProgram(GLuint pipeline, GLuint program);
extern GLuint  glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const*strings);
extern void  glBindProgramPipeline(GLuint pipeline);
extern void  glDeleteProgramPipelines(GLsizei n, const GLuint *pipelines);
extern void  glGenProgramPipelines(GLsizei n, GLuint *pipelines);
extern GLboolean  glIsProgramPipeline(GLuint pipeline);
extern void  glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params);
extern void  glProgramUniform1i(GLuint program, GLint location, GLint v0);
extern void  glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
extern void  glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform1d(GLuint program, GLint location, GLdouble v0);
extern void  glProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
extern void  glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
extern void  glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern void  glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1);
extern void  glProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
extern void  glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern void  glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void  glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
extern void  glProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern void  glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void  glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void  glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
extern void  glProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern void  glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glValidateProgramPipeline(GLuint pipeline);
extern void  glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void  glVertexAttribL1d(GLuint index, GLdouble x);
extern void  glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y);
extern void  glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void  glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glVertexAttribL1dv(GLuint index, const GLdouble *v);
extern void  glVertexAttribL2dv(GLuint index, const GLdouble *v);
extern void  glVertexAttribL3dv(GLuint index, const GLdouble *v);
extern void  glVertexAttribL4dv(GLuint index, const GLdouble *v);
extern void  glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble *params);
extern void  glViewportArrayv(GLuint first, GLsizei count, const GLfloat *v);
extern void  glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern void  glViewportIndexedfv(GLuint index, const GLfloat *v);
extern void  glScissorArrayv(GLuint first, GLsizei count, const GLint *v);
extern void  glScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern void  glScissorIndexedv(GLuint index, const GLint *v);
extern void  glDepthRangeArrayv(GLuint first, GLsizei count, const GLdouble *v);
extern void  glDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f);
extern void  glGetFloati_v(GLenum target, GLuint index, GLfloat *data);
extern void  glGetDoublei_v(GLenum target, GLuint index, GLdouble *data);
extern void  glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
extern void  glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
extern void  glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
extern void  glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
extern void  glGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
extern void  glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
extern void  glMemoryBarrier(GLbitfield barriers);
extern void  glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern void  glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern void  glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount);
extern void  glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
extern void  glClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
extern void  glClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
extern void  glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
extern void  glDispatchComputeIndirect(GLintptr indirect);
extern void  glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern void  glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
extern void  glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint *params);
extern void  glGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
extern void  glInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
extern void  glInvalidateTexImage(GLuint texture, GLint level);
extern void  glInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern void  glInvalidateBufferData(GLuint buffer);
extern void  glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments);
extern void  glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glMultiDrawArraysIndirect(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
extern void  glMultiDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
extern void  glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
extern GLuint  glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar *name);
extern void  glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
extern void  glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
extern GLint  glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar *name);
extern GLint  glGetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar *name);
extern void  glShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
extern void  glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void  glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void  glTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern void  glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern void  glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern void  glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void  glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void  glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
extern void  glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
extern void  glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
extern void  glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
extern void  glDebugMessageCallback(GLDEBUGPROC callback, const void *userParam);
extern GLuint  glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
extern void  glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar *message);
extern void  glPopDebugGroup(void);
extern void  glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
extern void  glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
extern void  glObjectPtrLabel(const void *ptr, GLsizei length, const GLchar *label);
extern void  glGetObjectPtrLabel(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
extern void  glBufferStorage(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
extern void  glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
extern void  glClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
extern void  glBindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
extern void  glBindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
extern void  glBindTextures(GLuint first, GLsizei count, const GLuint *textures);
extern void  glBindSamplers(GLuint first, GLsizei count, const GLuint *samplers);
extern void  glBindImageTextures(GLuint first, GLsizei count, const GLuint *textures);
extern void  glBindVertexBuffers(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
extern void  glClipControl(GLenum origin, GLenum depth);
extern void  glCreateTransformFeedbacks(GLsizei n, GLuint *ids);
extern void  glTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer);
extern void  glTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint *param);
extern void  glGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint *param);
extern void  glGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
extern void  glCreateBuffers(GLsizei n, GLuint *buffers);
extern void  glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
extern void  glNamedBufferData(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
extern void  glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
extern void  glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void  glClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
extern void  glClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
extern void * glMapNamedBuffer(GLuint buffer, GLenum access);
extern void * glMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern GLboolean  glUnmapNamedBuffer(GLuint buffer);
extern void  glFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern void  glGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint *params);
extern void  glGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 *params);
extern void  glGetNamedBufferPointerv(GLuint buffer, GLenum pname, void **params);
extern void  glGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
extern void  glCreateFramebuffers(GLsizei n, GLuint *framebuffers);
extern void  glNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void  glNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param);
extern void  glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
extern void  glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void  glNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf);
extern void  glNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum *bufs);
extern void  glNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src);
extern void  glInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
extern void  glInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
extern void  glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
extern void  glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
extern void  glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern void  glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern GLenum  glCheckNamedFramebufferStatus(GLuint framebuffer, GLenum target);
extern void  glGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint *param);
extern void  glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
extern void  glCreateRenderbuffers(GLsizei n, GLuint *renderbuffers);
extern void  glNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint *params);
extern void  glCreateTextures(GLenum target, GLsizei n, GLuint *textures);
extern void  glTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer);
extern void  glTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
extern void  glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern void  glTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void  glTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void  glTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
extern void  glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
extern void  glTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void  glCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
extern void  glCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
extern void  glCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
extern void  glCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void  glCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glTextureParameterf(GLuint texture, GLenum pname, GLfloat param);
extern void  glTextureParameterfv(GLuint texture, GLenum pname, const GLfloat *param);
extern void  glTextureParameteri(GLuint texture, GLenum pname, GLint param);
extern void  glTextureParameterIiv(GLuint texture, GLenum pname, const GLint *params);
extern void  glTextureParameterIuiv(GLuint texture, GLenum pname, const GLuint *params);
extern void  glTextureParameteriv(GLuint texture, GLenum pname, const GLint *param);
extern void  glGenerateTextureMipmap(GLuint texture);
extern void  glBindTextureUnit(GLuint unit, GLuint texture);
extern void  glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
extern void  glGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
extern void  glGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat *params);
extern void  glGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint *params);
extern void  glGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat *params);
extern void  glGetTextureParameterIiv(GLuint texture, GLenum pname, GLint *params);
extern void  glGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint *params);
extern void  glGetTextureParameteriv(GLuint texture, GLenum pname, GLint *params);
extern void  glCreateVertexArrays(GLsizei n, GLuint *arrays);
extern void  glDisableVertexArrayAttrib(GLuint vaobj, GLuint index);
extern void  glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);
extern void  glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);
extern void  glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern void  glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
extern void  glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
extern void  glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern void  glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void  glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void  glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor);
extern void  glGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint *param);
extern void  glGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
extern void  glGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
extern void  glCreateSamplers(GLsizei n, GLuint *samplers);
extern void  glCreateProgramPipelines(GLsizei n, GLuint *pipelines);
extern void  glCreateQueries(GLenum target, GLsizei n, GLuint *ids);
extern void  glGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void  glGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void  glGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void  glGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void  glMemoryBarrierByRegion(GLbitfield barriers);
extern void  glGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
extern void  glGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
extern GLenum  glGetGraphicsResetStatus(void);
extern void  glGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
extern void  glGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
extern void  glGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
extern void  glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
extern void  glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint *params);
extern void  glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
extern void  glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
extern void  glTextureBarrier(void);
extern void  glSpecializeShader(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
extern void  glMultiDrawArraysIndirectCount(GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern void  glMultiDrawElementsIndirectCount(GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern void  glPolygonOffsetClamp(GLfloat factor, GLfloat units, GLfloat clamp);
extern void  glPrimitiveBoundingBoxARB(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern GLuint64  glGetTextureHandleARB(GLuint texture);
extern GLuint64  glGetTextureSamplerHandleARB(GLuint texture, GLuint sampler);
extern void  glMakeTextureHandleResidentARB(GLuint64 handle);
extern void  glMakeTextureHandleNonResidentARB(GLuint64 handle);
extern GLuint64  glGetImageHandleARB(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
extern void  glMakeImageHandleResidentARB(GLuint64 handle, GLenum access);
extern void  glMakeImageHandleNonResidentARB(GLuint64 handle);
extern void  glUniformHandleui64ARB(GLint location, GLuint64 value);
extern void  glUniformHandleui64vARB(GLint location, GLsizei count, const GLuint64 *value);
extern void  glProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value);
extern void  glProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
extern GLboolean  glIsTextureHandleResidentARB(GLuint64 handle);
extern GLboolean  glIsImageHandleResidentARB(GLuint64 handle);
extern void  glVertexAttribL1ui64ARB(GLuint index, GLuint64EXT x);
extern void  glVertexAttribL1ui64vARB(GLuint index, const GLuint64EXT *v);
extern void  glGetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT *params);
extern GLsync  glCreateSyncFromCLeventARB(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
extern void  glDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
extern void  glDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
extern void  glDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
extern void  glDebugMessageCallbackARB(GLDEBUGPROCARB callback, const void *userParam);
extern GLuint  glGetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
extern void  glBlendEquationiARB(GLuint buf, GLenum mode);
extern void  glBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern void  glBlendFunciARB(GLuint buf, GLenum src, GLenum dst);
extern void  glBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void  glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern void  glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
extern void  glProgramParameteriARB(GLuint program, GLenum pname, GLint value);
extern void  glFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern void  glFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void  glFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern void  glSpecializeShaderARB(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);
extern void  glUniform1i64ARB(GLint location, GLint64 x);
extern void  glUniform2i64ARB(GLint location, GLint64 x, GLint64 y);
extern void  glUniform3i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z);
extern void  glUniform4i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
extern void  glUniform1i64vARB(GLint location, GLsizei count, const GLint64 *value);
extern void  glUniform2i64vARB(GLint location, GLsizei count, const GLint64 *value);
extern void  glUniform3i64vARB(GLint location, GLsizei count, const GLint64 *value);
extern void  glUniform4i64vARB(GLint location, GLsizei count, const GLint64 *value);
extern void  glUniform1ui64ARB(GLint location, GLuint64 x);
extern void  glUniform2ui64ARB(GLint location, GLuint64 x, GLuint64 y);
extern void  glUniform3ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
extern void  glUniform4ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
extern void  glUniform1ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
extern void  glUniform2ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
extern void  glUniform3ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
extern void  glUniform4ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
extern void  glGetUniformi64vARB(GLuint program, GLint location, GLint64 *params);
extern void  glGetUniformui64vARB(GLuint program, GLint location, GLuint64 *params);
extern void  glGetnUniformi64vARB(GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
extern void  glGetnUniformui64vARB(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
extern void  glProgramUniform1i64ARB(GLuint program, GLint location, GLint64 x);
extern void  glProgramUniform2i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y);
extern void  glProgramUniform3i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
extern void  glProgramUniform4i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
extern void  glProgramUniform1i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
extern void  glProgramUniform2i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
extern void  glProgramUniform3i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
extern void  glProgramUniform4i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
extern void  glProgramUniform1ui64ARB(GLuint program, GLint location, GLuint64 x);
extern void  glProgramUniform2ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y);
extern void  glProgramUniform3ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
extern void  glProgramUniform4ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
extern void  glProgramUniform1ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
extern void  glProgramUniform2ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
extern void  glProgramUniform3ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
extern void  glProgramUniform4ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
extern void  glMultiDrawArraysIndirectCountARB(GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern void  glMultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern void  glVertexAttribDivisorARB(GLuint index, GLuint divisor);
extern void  glMaxShaderCompilerThreadsARB(GLuint count);
extern GLenum  glGetGraphicsResetStatusARB(void);
extern void  glGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
extern void  glReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
extern void  glGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, void *img);
extern void  glGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
extern void  glGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint *params);
extern void  glGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
extern void  glGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
extern void  glFramebufferSampleLocationsfvARB(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
extern void  glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
extern void  glEvaluateDepthValuesARB(void);
extern void  glMinSampleShadingARB(GLfloat value);
extern void  glNamedStringARB(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
extern void  glDeleteNamedStringARB(GLint namelen, const GLchar *name);
extern void  glCompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
extern GLboolean  glIsNamedStringARB(GLint namelen, const GLchar *name);
extern void  glGetNamedStringARB(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
extern void  glGetNamedStringivARB(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
extern void  glBufferPageCommitmentARB(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern void  glNamedBufferPageCommitmentEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern void  glNamedBufferPageCommitmentARB(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
extern void  glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
extern void  glTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer);
extern void  glBlendBarrierKHR(void);
extern void  glMaxShaderCompilerThreadsKHR(GLuint count);
extern void  glRenderbufferStorageMultisampleAdvancedAMD(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glNamedRenderbufferStorageMultisampleAdvancedAMD(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glGetPerfMonitorGroupsAMD(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
extern void  glGetPerfMonitorCountersAMD(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
extern void  glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
extern void  glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
extern void  glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void *data);
extern void  glGenPerfMonitorsAMD(GLsizei n, GLuint *monitors);
extern void  glDeletePerfMonitorsAMD(GLsizei n, GLuint *monitors);
extern void  glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
extern void  glBeginPerfMonitorAMD(GLuint monitor);
extern void  glEndPerfMonitorAMD(GLuint monitor);
extern void  glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
extern void  glEGLImageTargetTexStorageEXT(GLenum target, GLeglImageOES image, const GLint* attrib_list);
extern void  glEGLImageTargetTextureStorageEXT(GLuint texture, GLeglImageOES image, const GLint* attrib_list);
extern void  glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar *label);
extern void  glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
extern void  glInsertEventMarkerEXT(GLsizei length, const GLchar *marker);
extern void  glPushGroupMarkerEXT(GLsizei length, const GLchar *marker);
extern void  glPopGroupMarkerEXT(void);
extern void  glMatrixLoadfEXT(GLenum mode, const GLfloat *m);
extern void  glMatrixLoaddEXT(GLenum mode, const GLdouble *m);
extern void  glMatrixMultfEXT(GLenum mode, const GLfloat *m);
extern void  glMatrixMultdEXT(GLenum mode, const GLdouble *m);
extern void  glMatrixLoadIdentityEXT(GLenum mode);
extern void  glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern void  glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
extern void  glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
extern void  glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
extern void  glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
extern void  glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
extern void  glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern void  glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern void  glMatrixPopEXT(GLenum mode);
extern void  glMatrixPushEXT(GLenum mode);
extern void  glClientAttribDefaultEXT(GLbitfield mask);
extern void  glPushClientAttribDefaultEXT(GLbitfield mask);
extern void  glTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param);
extern void  glTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
extern void  glTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param);
extern void  glTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params);
extern void  glTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
extern void  glTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
extern void  glCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern void  glCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern void  glCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void  glCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
extern void  glGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat *params);
extern void  glGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params);
extern void  glGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
extern void  glGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
extern void  glTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void  glCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture);
extern void  glMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
extern void  glMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
extern void  glMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
extern void  glMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
extern void  glMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
extern void  glMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
extern void  glMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
extern void  glMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
extern void  glMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param);
extern void  glMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
extern void  glGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
extern void  glGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params);
extern void  glGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
extern void  glGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
extern void  glGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint *params);
extern void  glMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
extern void  glMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
extern void  glMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
extern void  glMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
extern void  glMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
extern void  glMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
extern void  glCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern void  glCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern void  glCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void  glCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
extern void  glGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
extern void  glGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params);
extern void  glGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
extern void  glGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
extern void  glMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void  glCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glEnableClientStateIndexedEXT(GLenum array, GLuint index);
extern void  glDisableClientStateIndexedEXT(GLenum array, GLuint index);
extern void  glGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat *data);
extern void  glGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble *data);
extern void  glGetPointerIndexedvEXT(GLenum target, GLuint index, void **data);
extern void  glEnableIndexedEXT(GLenum target, GLuint index);
extern void  glDisableIndexedEXT(GLenum target, GLuint index);
extern GLboolean  glIsEnabledIndexedEXT(GLenum target, GLuint index);
extern void  glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint *data);
extern void  glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean *data);
extern void  glCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
extern void  glCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
extern void  glCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
extern void  glCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
extern void  glCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
extern void  glCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
extern void  glGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void *img);
extern void  glCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
extern void  glCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
extern void  glCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
extern void  glCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
extern void  glCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
extern void  glCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
extern void  glGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void *img);
extern void  glMatrixLoadTransposefEXT(GLenum mode, const GLfloat *m);
extern void  glMatrixLoadTransposedEXT(GLenum mode, const GLdouble *m);
extern void  glMatrixMultTransposefEXT(GLenum mode, const GLfloat *m);
extern void  glMatrixMultTransposedEXT(GLenum mode, const GLdouble *m);
extern void  glNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
extern void  glNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
extern void * glMapNamedBufferEXT(GLuint buffer, GLenum access);
extern GLboolean  glUnmapNamedBufferEXT(GLuint buffer);
extern void  glGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint *params);
extern void  glGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void **params);
extern void  glGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
extern void  glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
extern void  glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern void  glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void  glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void  glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
extern void  glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
extern void  glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern void  glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void  glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
extern void  glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
extern void  glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
extern void  glMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
extern void  glTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params);
extern void  glTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint *params);
extern void  glGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params);
extern void  glGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint *params);
extern void  glMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
extern void  glMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
extern void  glGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params);
extern void  glGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint *params);
extern void  glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
extern void  glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
extern void  glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern void  glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern void  glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
extern void  glNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
extern void  glNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern void  glNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint *params);
extern void  glNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
extern void  glNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern void  glNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint *params);
extern void  glNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
extern void  glGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint *params);
extern void  glGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint *params);
extern void  glEnableClientStateiEXT(GLenum array, GLuint index);
extern void  glDisableClientStateiEXT(GLenum array, GLuint index);
extern void  glGetFloati_vEXT(GLenum pname, GLuint index, GLfloat *params);
extern void  glGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble *params);
extern void  glGetPointeri_vEXT(GLenum pname, GLuint index, void **params);
extern void  glNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
extern void  glNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble *params);
extern void  glNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat *params);
extern void  glGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble *params);
extern void  glGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat *params);
extern void  glGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint *params);
extern void  glGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void *string);
extern void  glNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint *params);
extern void  glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern GLenum  glCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target);
extern void  glNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void  glNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void  glNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern void  glNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void  glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
extern void  glGenerateTextureMipmapEXT(GLuint texture, GLenum target);
extern void  glGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target);
extern void  glFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode);
extern void  glFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum *bufs);
extern void  glFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode);
extern void  glGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params);
extern void  glNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void  glNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
extern void  glNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void  glNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern void  glTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer);
extern void  glMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer);
extern void  glVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
extern void  glVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern void  glVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
extern void  glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern void  glEnableVertexArrayEXT(GLuint vaobj, GLenum array);
extern void  glDisableVertexArrayEXT(GLuint vaobj, GLenum array);
extern void  glEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
extern void  glDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
extern void  glGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint *param);
extern void  glGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void **param);
extern void  glGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
extern void  glGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void **param);
extern void * glMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern void  glFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern void  glNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
extern void  glClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
extern void  glClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
extern void  glNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param);
extern void  glGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params);
extern void  glProgramUniform1dEXT(GLuint program, GLint location, GLdouble x);
extern void  glProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y);
extern void  glProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
extern void  glProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
extern void  glProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
extern void  glTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern void  glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern void  glTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void  glTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void  glVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern void  glVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern void  glVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void  glVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void  glVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
extern void  glVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor);
extern void  glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern void  glTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
extern void  glVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor);
extern void  glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
extern void  glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
extern void  glPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp);
extern void  glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
extern void  glUseShaderProgramEXT(GLenum type, GLuint program);
extern void  glActiveProgramEXT(GLuint program);
extern GLuint  glCreateShaderProgramEXT(GLenum type, const GLchar *string);
extern void  glFramebufferFetchBarrierEXT(void);
extern void  glWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint *box);
extern void  glApplyFramebufferAttachmentCMAAINTEL(void);
extern void  glBeginPerfQueryINTEL(GLuint queryHandle);
extern void  glCreatePerfQueryINTEL(GLuint queryId, GLuint *queryHandle);
extern void  glDeletePerfQueryINTEL(GLuint queryHandle);
extern void  glEndPerfQueryINTEL(GLuint queryHandle);
extern void  glGetFirstPerfQueryIdINTEL(GLuint *queryId);
extern void  glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint *nextQueryId);
extern void  glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
extern void  glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten);
extern void  glGetPerfQueryIdByNameINTEL(GLchar *queryName, GLuint *queryId);
extern void  glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
extern void  glMultiDrawArraysIndirectBindlessNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
extern void  glMultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
extern void  glMultiDrawArraysIndirectBindlessCountNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
extern void  glMultiDrawElementsIndirectBindlessCountNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
extern GLuint64  glGetTextureHandleNV(GLuint texture);
extern GLuint64  glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
extern void  glMakeTextureHandleResidentNV(GLuint64 handle);
extern void  glMakeTextureHandleNonResidentNV(GLuint64 handle);
extern GLuint64  glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
extern void  glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
extern void  glMakeImageHandleNonResidentNV(GLuint64 handle);
extern void  glUniformHandleui64NV(GLint location, GLuint64 value);
extern void  glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 *value);
extern void  glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
extern void  glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
extern GLboolean  glIsTextureHandleResidentNV(GLuint64 handle);
extern GLboolean  glIsImageHandleResidentNV(GLuint64 handle);
extern void  glBlendParameteriNV(GLenum pname, GLint value);
extern void  glBlendBarrierNV(void);
extern void  glViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
extern void  glCreateStatesNV(GLsizei n, GLuint *states);
extern void  glDeleteStatesNV(GLsizei n, const GLuint *states);
extern GLboolean  glIsStateNV(GLuint state);
extern void  glStateCaptureNV(GLuint state, GLenum mode);
extern GLuint  glGetCommandHeaderNV(GLenum tokenID, GLuint size);
extern GLushort  glGetStageIndexNV(GLenum shadertype);
extern void  glDrawCommandsNV(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);
extern void  glDrawCommandsAddressNV(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);
extern void  glDrawCommandsStatesNV(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
extern void  glDrawCommandsStatesAddressNV(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
extern void  glCreateCommandListsNV(GLsizei n, GLuint *lists);
extern void  glDeleteCommandListsNV(GLsizei n, const GLuint *lists);
extern GLboolean  glIsCommandListNV(GLuint list);
extern void  glListDrawCommandsStatesClientNV(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
extern void  glCommandListSegmentsNV(GLuint list, GLuint segments);
extern void  glCompileCommandListNV(GLuint list);
extern void  glCallCommandListNV(GLuint list);
extern void  glBeginConditionalRenderNV(GLuint id, GLenum mode);
extern void  glEndConditionalRenderNV(void);
extern void  glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
extern void  glConservativeRasterParameterfNV(GLenum pname, GLfloat value);
extern void  glConservativeRasterParameteriNV(GLenum pname, GLint param);
extern void  glDrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
extern GLVULKANPROCNV  glGetVkProcAddrNV(const GLchar *name);
extern void  glWaitVkSemaphoreNV(GLuint64 vkSemaphore);
extern void  glSignalVkSemaphoreNV(GLuint64 vkSemaphore);
extern void  glSignalVkFenceNV(GLuint64 vkFence);
extern void  glFragmentCoverageColorNV(GLuint color);
extern void  glCoverageModulationTableNV(GLsizei n, const GLfloat *v);
extern void  glGetCoverageModulationTableNV(GLsizei bufsize, GLfloat *v);
extern void  glCoverageModulationNV(GLenum components);
extern void  glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glUniform1i64NV(GLint location, GLint64EXT x);
extern void  glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y);
extern void  glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern void  glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern void  glUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
extern void  glUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
extern void  glUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
extern void  glUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
extern void  glUniform1ui64NV(GLint location, GLuint64EXT x);
extern void  glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y);
extern void  glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern void  glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern void  glUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT *params);
extern void  glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x);
extern void  glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
extern void  glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern void  glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern void  glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
extern void  glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
extern void  glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
extern void  glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
extern void  glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x);
extern void  glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
extern void  glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern void  glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern void  glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
extern void  glGetMemoryObjectDetachedResourcesuivNV(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params);
extern void  glResetMemoryObjectParameterNV(GLuint memory, GLenum pname);
extern void  glTexAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
extern void  glBufferAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset);
extern void  glTextureAttachMemoryNV(GLuint texture, GLuint memory, GLuint64 offset);
extern void  glNamedBufferAttachMemoryNV(GLuint buffer, GLuint memory, GLuint64 offset);
extern void  glDrawMeshTasksNV(GLuint first, GLuint count);
extern void  glDrawMeshTasksIndirectNV(GLintptr indirect);
extern void  glMultiDrawMeshTasksIndirectNV(GLintptr indirect, GLsizei drawcount, GLsizei stride);
extern void  glMultiDrawMeshTasksIndirectCountNV(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
extern GLuint  glGenPathsNV(GLsizei range);
extern void  glDeletePathsNV(GLuint path, GLsizei range);
extern GLboolean  glIsPathNV(GLuint path);
extern void  glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
extern void  glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
extern void  glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
extern void  glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
extern void  glPathStringNV(GLuint path, GLenum format, GLsizei length, const void *pathString);
extern void  glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern void  glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern void  glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
extern void  glCopyPathNV(GLuint resultPath, GLuint srcPath);
extern void  glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
extern void  glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
extern void  glPathParameterivNV(GLuint path, GLenum pname, const GLint *value);
extern void  glPathParameteriNV(GLuint path, GLenum pname, GLint value);
extern void  glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat *value);
extern void  glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
extern void  glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat *dashArray);
extern void  glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
extern void  glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
extern void  glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
extern void  glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
extern void  glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
extern void  glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
extern void  glPathCoverDepthFuncNV(GLenum func);
extern void  glCoverFillPathNV(GLuint path, GLenum coverMode);
extern void  glCoverStrokePathNV(GLuint path, GLenum coverMode);
extern void  glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
extern void  glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
extern void  glGetPathParameterivNV(GLuint path, GLenum pname, GLint *value);
extern void  glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat *value);
extern void  glGetPathCommandsNV(GLuint path, GLubyte *commands);
extern void  glGetPathCoordsNV(GLuint path, GLfloat *coords);
extern void  glGetPathDashArrayNV(GLuint path, GLfloat *dashArray);
extern void  glGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
extern void  glGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
extern void  glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
extern GLboolean  glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
extern GLboolean  glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
extern GLfloat  glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
extern GLboolean  glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
extern void  glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat *m);
extern void  glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat *m);
extern void  glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat *m);
extern void  glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat *m);
extern void  glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat *m);
extern void  glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat *m);
extern void  glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
extern void  glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
extern void  glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
extern void  glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
extern GLenum  glPathGlyphIndexRangeNV(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
extern GLenum  glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern GLenum  glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern void  glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
extern void  glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
extern void  glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
extern void  glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
extern void  glResolveDepthValuesNV(void);
extern void  glScissorExclusiveNV(GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glScissorExclusiveArrayvNV(GLuint first, GLsizei count, const GLint *v);
extern void  glMakeBufferResidentNV(GLenum target, GLenum access);
extern void  glMakeBufferNonResidentNV(GLenum target);
extern GLboolean  glIsBufferResidentNV(GLenum target);
extern void  glMakeNamedBufferResidentNV(GLuint buffer, GLenum access);
extern void  glMakeNamedBufferNonResidentNV(GLuint buffer);
extern GLboolean  glIsNamedBufferResidentNV(GLuint buffer);
extern void  glGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT *params);
extern void  glGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT *params);
extern void  glGetIntegerui64vNV(GLenum value, GLuint64EXT *result);
extern void  glUniformui64NV(GLint location, GLuint64EXT value);
extern void  glUniformui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT *params);
extern void  glProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value);
extern void  glProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
extern void  glBindShadingRateImageNV(GLuint texture);
extern void  glGetShadingRateImagePaletteNV(GLuint viewport, GLuint entry, GLenum *rate);
extern void  glGetShadingRateSampleLocationivNV(GLenum rate, GLuint samples, GLuint index, GLint *location);
extern void  glShadingRateImageBarrierNV(GLboolean synchronize);
extern void  glShadingRateImagePaletteNV(GLuint viewport, GLuint first, GLsizei count, const GLenum *rates);
extern void  glShadingRateSampleOrderNV(GLenum order);
extern void  glShadingRateSampleOrderCustomNV(GLenum rate, GLuint samples, const GLint *locations);
extern void  glTextureBarrierNV(void);
extern void  glVertexAttribL1i64NV(GLuint index, GLint64EXT x);
extern void  glVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y);
extern void  glVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern void  glVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern void  glVertexAttribL1i64vNV(GLuint index, const GLint64EXT *v);
extern void  glVertexAttribL2i64vNV(GLuint index, const GLint64EXT *v);
extern void  glVertexAttribL3i64vNV(GLuint index, const GLint64EXT *v);
extern void  glVertexAttribL4i64vNV(GLuint index, const GLint64EXT *v);
extern void  glVertexAttribL1ui64NV(GLuint index, GLuint64EXT x);
extern void  glVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y);
extern void  glVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern void  glVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern void  glVertexAttribL1ui64vNV(GLuint index, const GLuint64EXT *v);
extern void  glVertexAttribL2ui64vNV(GLuint index, const GLuint64EXT *v);
extern void  glVertexAttribL3ui64vNV(GLuint index, const GLuint64EXT *v);
extern void  glVertexAttribL4ui64vNV(GLuint index, const GLuint64EXT *v);
extern void  glGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT *params);
extern void  glGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT *params);
extern void  glVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
extern void  glBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
extern void  glVertexFormatNV(GLint size, GLenum type, GLsizei stride);
extern void  glNormalFormatNV(GLenum type, GLsizei stride);
extern void  glColorFormatNV(GLint size, GLenum type, GLsizei stride);
extern void  glIndexFormatNV(GLenum type, GLsizei stride);
extern void  glTexCoordFormatNV(GLint size, GLenum type, GLsizei stride);
extern void  glEdgeFlagFormatNV(GLsizei stride);
extern void  glSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride);
extern void  glFogCoordFormatNV(GLenum type, GLsizei stride);
extern void  glVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
extern void  glVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
extern void  glGetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT *result);
extern void  glViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
extern void  glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
extern void  glClientActiveTexture(GLenum texture);
extern void  glMultiTexCoord1d(GLenum target, GLdouble s);
extern void  glMultiTexCoord1dv(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord1f(GLenum target, GLfloat s);
extern void  glMultiTexCoord1fv(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord1i(GLenum target, GLint s);
extern void  glMultiTexCoord1iv(GLenum target, const GLint *v);
extern void  glMultiTexCoord1s(GLenum target, GLshort s);
extern void  glMultiTexCoord1sv(GLenum target, const GLshort *v);
extern void  glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t);
extern void  glMultiTexCoord2dv(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t);
extern void  glMultiTexCoord2fv(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord2i(GLenum target, GLint s, GLint t);
extern void  glMultiTexCoord2iv(GLenum target, const GLint *v);
extern void  glMultiTexCoord2s(GLenum target, GLshort s, GLshort t);
extern void  glMultiTexCoord2sv(GLenum target, const GLshort *v);
extern void  glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r);
extern void  glMultiTexCoord3dv(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r);
extern void  glMultiTexCoord3fv(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r);
extern void  glMultiTexCoord3iv(GLenum target, const GLint *v);
extern void  glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r);
extern void  glMultiTexCoord3sv(GLenum target, const GLshort *v);
extern void  glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void  glMultiTexCoord4dv(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void  glMultiTexCoord4fv(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q);
extern void  glMultiTexCoord4iv(GLenum target, const GLint *v);
extern void  glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
extern void  glMultiTexCoord4sv(GLenum target, const GLshort *v);
extern void  glLoadTransposeMatrixf(const GLfloat *m);
extern void  glLoadTransposeMatrixd(const GLdouble *m);
extern void  glMultTransposeMatrixf(const GLfloat *m);
extern void  glMultTransposeMatrixd(const GLdouble *m);
extern void  glFogCoordf(GLfloat coord);
extern void  glFogCoordfv(const GLfloat *coord);
extern void  glFogCoordd(GLdouble coord);
extern void  glFogCoorddv(const GLdouble *coord);
extern void  glFogCoordPointer(GLenum type, GLsizei stride, const void *pointer);
extern void  glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue);
extern void  glSecondaryColor3bv(const GLbyte *v);
extern void  glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue);
extern void  glSecondaryColor3dv(const GLdouble *v);
extern void  glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue);
extern void  glSecondaryColor3fv(const GLfloat *v);
extern void  glSecondaryColor3i(GLint red, GLint green, GLint blue);
extern void  glSecondaryColor3iv(const GLint *v);
extern void  glSecondaryColor3s(GLshort red, GLshort green, GLshort blue);
extern void  glSecondaryColor3sv(const GLshort *v);
extern void  glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue);
extern void  glSecondaryColor3ubv(const GLubyte *v);
extern void  glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue);
extern void  glSecondaryColor3uiv(const GLuint *v);
extern void  glSecondaryColor3us(GLushort red, GLushort green, GLushort blue);
extern void  glSecondaryColor3usv(const GLushort *v);
extern void  glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glWindowPos2d(GLdouble x, GLdouble y);
extern void  glWindowPos2dv(const GLdouble *v);
extern void  glWindowPos2f(GLfloat x, GLfloat y);
extern void  glWindowPos2fv(const GLfloat *v);
extern void  glWindowPos2i(GLint x, GLint y);
extern void  glWindowPos2iv(const GLint *v);
extern void  glWindowPos2s(GLshort x, GLshort y);
extern void  glWindowPos2sv(const GLshort *v);
extern void  glWindowPos3d(GLdouble x, GLdouble y, GLdouble z);
extern void  glWindowPos3dv(const GLdouble *v);
extern void  glWindowPos3f(GLfloat x, GLfloat y, GLfloat z);
extern void  glWindowPos3fv(const GLfloat *v);
extern void  glWindowPos3i(GLint x, GLint y, GLint z);
extern void  glWindowPos3iv(const GLint *v);
extern void  glWindowPos3s(GLshort x, GLshort y, GLshort z);
extern void  glWindowPos3sv(const GLshort *v);
extern void  glVertexP2ui(GLenum type, GLuint value);
extern void  glVertexP2uiv(GLenum type, const GLuint *value);
extern void  glVertexP3ui(GLenum type, GLuint value);
extern void  glVertexP3uiv(GLenum type, const GLuint *value);
extern void  glVertexP4ui(GLenum type, GLuint value);
extern void  glVertexP4uiv(GLenum type, const GLuint *value);
extern void  glTexCoordP1ui(GLenum type, GLuint coords);
extern void  glTexCoordP1uiv(GLenum type, const GLuint *coords);
extern void  glTexCoordP2ui(GLenum type, GLuint coords);
extern void  glTexCoordP2uiv(GLenum type, const GLuint *coords);
extern void  glTexCoordP3ui(GLenum type, GLuint coords);
extern void  glTexCoordP3uiv(GLenum type, const GLuint *coords);
extern void  glTexCoordP4ui(GLenum type, GLuint coords);
extern void  glTexCoordP4uiv(GLenum type, const GLuint *coords);
extern void  glMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords);
extern void  glMultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint *coords);
extern void  glMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords);
extern void  glMultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint *coords);
extern void  glMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords);
extern void  glMultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint *coords);
extern void  glMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords);
extern void  glMultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint *coords);
extern void  glNormalP3ui(GLenum type, GLuint coords);
extern void  glNormalP3uiv(GLenum type, const GLuint *coords);
extern void  glColorP3ui(GLenum type, GLuint color);
extern void  glColorP3uiv(GLenum type, const GLuint *color);
extern void  glColorP4ui(GLenum type, GLuint color);
extern void  glColorP4uiv(GLenum type, const GLuint *color);
extern void  glSecondaryColorP3ui(GLenum type, GLuint color);
extern void  glSecondaryColorP3uiv(GLenum type, const GLuint *color);
extern void  glGetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
extern void  glGetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
extern void  glGetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
extern void  glGetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat *values);
extern void  glGetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint *values);
extern void  glGetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort *values);
extern void  glGetnPolygonStipple(GLsizei bufSize, GLubyte *pattern);
extern void  glGetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
extern void  glGetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
extern void  glGetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
extern void  glGetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
extern void  glGetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
extern void  glClampColorARB(GLenum target, GLenum clamp);
extern void  glDrawBuffersARB(GLsizei n, const GLenum *bufs);
extern void  glProgramStringARB(GLenum target, GLenum format, GLsizei len, const void *string);
extern void  glBindProgramARB(GLenum target, GLuint program);
extern void  glDeleteProgramsARB(GLsizei n, const GLuint *programs);
extern void  glGenProgramsARB(GLsizei n, GLuint *programs);
extern void  glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);
extern void  glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);
extern void  glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);
extern void  glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);
extern void  glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble *params);
extern void  glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat *params);
extern void  glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble *params);
extern void  glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat *params);
extern void  glGetProgramivARB(GLenum target, GLenum pname, GLint *params);
extern void  glGetProgramStringARB(GLenum target, GLenum pname, void *string);
extern GLboolean  glIsProgramARB(GLuint program);
extern void  glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
extern void  glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat *params);
extern void  glColorTableParameteriv(GLenum target, GLenum pname, const GLint *params);
extern void  glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern void  glGetColorTable(GLenum target, GLenum format, GLenum type, void *table);
extern void  glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetColorTableParameteriv(GLenum target, GLenum pname, GLint *params);
extern void  glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
extern void  glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern void  glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
extern void  glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
extern void  glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params);
extern void  glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat *params);
extern void  glConvolutionParameteri(GLenum target, GLenum pname, GLint params);
extern void  glConvolutionParameteriv(GLenum target, GLenum pname, const GLint *params);
extern void  glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern void  glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, void *image);
extern void  glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint *params);
extern void  glGetSeparableFilter(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
extern void  glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
extern void  glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
extern void  glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetHistogramParameteriv(GLenum target, GLenum pname, GLint *params);
extern void  glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
extern void  glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint *params);
extern void  glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
extern void  glMinmax(GLenum target, GLenum internalformat, GLboolean sink);
extern void  glResetHistogram(GLenum target);
extern void  glResetMinmax(GLenum target);
extern void  glCurrentPaletteMatrixARB(GLint index);
extern void  glMatrixIndexubvARB(GLint size, const GLubyte *indices);
extern void  glMatrixIndexusvARB(GLint size, const GLushort *indices);
extern void  glMatrixIndexuivARB(GLint size, const GLuint *indices);
extern void  glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glSampleCoverageARB(GLfloat value, GLboolean invert);
extern void  glActiveTextureARB(GLenum texture);
extern void  glClientActiveTextureARB(GLenum texture);
extern void  glMultiTexCoord1dARB(GLenum target, GLdouble s);
extern void  glMultiTexCoord1dvARB(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord1fARB(GLenum target, GLfloat s);
extern void  glMultiTexCoord1fvARB(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord1iARB(GLenum target, GLint s);
extern void  glMultiTexCoord1ivARB(GLenum target, const GLint *v);
extern void  glMultiTexCoord1sARB(GLenum target, GLshort s);
extern void  glMultiTexCoord1svARB(GLenum target, const GLshort *v);
extern void  glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);
extern void  glMultiTexCoord2dvARB(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);
extern void  glMultiTexCoord2fvARB(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord2iARB(GLenum target, GLint s, GLint t);
extern void  glMultiTexCoord2ivARB(GLenum target, const GLint *v);
extern void  glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);
extern void  glMultiTexCoord2svARB(GLenum target, const GLshort *v);
extern void  glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);
extern void  glMultiTexCoord3dvARB(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);
extern void  glMultiTexCoord3fvARB(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);
extern void  glMultiTexCoord3ivARB(GLenum target, const GLint *v);
extern void  glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);
extern void  glMultiTexCoord3svARB(GLenum target, const GLshort *v);
extern void  glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void  glMultiTexCoord4dvARB(GLenum target, const GLdouble *v);
extern void  glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void  glMultiTexCoord4fvARB(GLenum target, const GLfloat *v);
extern void  glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);
extern void  glMultiTexCoord4ivARB(GLenum target, const GLint *v);
extern void  glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
extern void  glMultiTexCoord4svARB(GLenum target, const GLshort *v);
extern void  glGenQueriesARB(GLsizei n, GLuint *ids);
extern void  glDeleteQueriesARB(GLsizei n, const GLuint *ids);
extern GLboolean  glIsQueryARB(GLuint id);
extern void  glBeginQueryARB(GLenum target, GLuint id);
extern void  glEndQueryARB(GLenum target);
extern void  glGetQueryivARB(GLenum target, GLenum pname, GLint *params);
extern void  glGetQueryObjectivARB(GLuint id, GLenum pname, GLint *params);
extern void  glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params);
extern void  glPointParameterfARB(GLenum pname, GLfloat param);
extern void  glPointParameterfvARB(GLenum pname, const GLfloat *params);
extern void  glGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
extern void  glGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
extern void  glGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
extern void  glGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat *values);
extern void  glGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint *values);
extern void  glGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort *values);
extern void  glGetnPolygonStippleARB(GLsizei bufSize, GLubyte *pattern);
extern void  glGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
extern void  glGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
extern void  glGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
extern void  glGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
extern void  glGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
extern void  glDeleteObjectARB(GLhandleARB obj);
extern GLhandleARB  glGetHandleARB(GLenum pname);
extern void  glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
extern GLhandleARB  glCreateShaderObjectARB(GLenum shaderType);
extern void  glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
extern void  glCompileShaderARB(GLhandleARB shaderObj);
extern GLhandleARB  glCreateProgramObjectARB(void);
extern void  glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
extern void  glLinkProgramARB(GLhandleARB programObj);
extern void  glUseProgramObjectARB(GLhandleARB programObj);
extern void  glValidateProgramARB(GLhandleARB programObj);
extern void  glUniform1fARB(GLint location, GLfloat v0);
extern void  glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);
extern void  glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern void  glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern void  glUniform1iARB(GLint location, GLint v0);
extern void  glUniform2iARB(GLint location, GLint v0, GLint v1);
extern void  glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
extern void  glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern void  glUniform1fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform2fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform3fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform4fvARB(GLint location, GLsizei count, const GLfloat *value);
extern void  glUniform1ivARB(GLint location, GLsizei count, const GLint *value);
extern void  glUniform2ivARB(GLint location, GLsizei count, const GLint *value);
extern void  glUniform3ivARB(GLint location, GLsizei count, const GLint *value);
extern void  glUniform4ivARB(GLint location, GLsizei count, const GLint *value);
extern void  glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat *params);
extern void  glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint *params);
extern void  glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
extern void  glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
extern GLint  glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB *name);
extern void  glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
extern void  glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat *params);
extern void  glGetUniformivARB(GLhandleARB programObj, GLint location, GLint *params);
extern void  glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
extern void  glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
extern void  glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
extern void  glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
extern void  glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
extern void  glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
extern void  glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
extern void  glGetCompressedTexImageARB(GLenum target, GLint level, void *img);
extern void  glLoadTransposeMatrixfARB(const GLfloat *m);
extern void  glLoadTransposeMatrixdARB(const GLdouble *m);
extern void  glMultTransposeMatrixfARB(const GLfloat *m);
extern void  glMultTransposeMatrixdARB(const GLdouble *m);
extern void  glWeightbvARB(GLint size, const GLbyte *weights);
extern void  glWeightsvARB(GLint size, const GLshort *weights);
extern void  glWeightivARB(GLint size, const GLint *weights);
extern void  glWeightfvARB(GLint size, const GLfloat *weights);
extern void  glWeightdvARB(GLint size, const GLdouble *weights);
extern void  glWeightubvARB(GLint size, const GLubyte *weights);
extern void  glWeightusvARB(GLint size, const GLushort *weights);
extern void  glWeightuivARB(GLint size, const GLuint *weights);
extern void  glWeightPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glVertexBlendARB(GLint count);
extern void  glBindBufferARB(GLenum target, GLuint buffer);
extern void  glDeleteBuffersARB(GLsizei n, const GLuint *buffers);
extern void  glGenBuffersARB(GLsizei n, GLuint *buffers);
extern GLboolean  glIsBufferARB(GLuint buffer);
extern void  glBufferDataARB(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
extern void  glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
extern void  glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
extern void * glMapBufferARB(GLenum target, GLenum access);
extern GLboolean  glUnmapBufferARB(GLenum target);
extern void  glGetBufferParameterivARB(GLenum target, GLenum pname, GLint *params);
extern void  glGetBufferPointervARB(GLenum target, GLenum pname, void **params);
extern void  glVertexAttrib1dARB(GLuint index, GLdouble x);
extern void  glVertexAttrib1dvARB(GLuint index, const GLdouble *v);
extern void  glVertexAttrib1fARB(GLuint index, GLfloat x);
extern void  glVertexAttrib1fvARB(GLuint index, const GLfloat *v);
extern void  glVertexAttrib1sARB(GLuint index, GLshort x);
extern void  glVertexAttrib1svARB(GLuint index, const GLshort *v);
extern void  glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
extern void  glVertexAttrib2dvARB(GLuint index, const GLdouble *v);
extern void  glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
extern void  glVertexAttrib2fvARB(GLuint index, const GLfloat *v);
extern void  glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
extern void  glVertexAttrib2svARB(GLuint index, const GLshort *v);
extern void  glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void  glVertexAttrib3dvARB(GLuint index, const GLdouble *v);
extern void  glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void  glVertexAttrib3fvARB(GLuint index, const GLfloat *v);
extern void  glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
extern void  glVertexAttrib3svARB(GLuint index, const GLshort *v);
extern void  glVertexAttrib4NbvARB(GLuint index, const GLbyte *v);
extern void  glVertexAttrib4NivARB(GLuint index, const GLint *v);
extern void  glVertexAttrib4NsvARB(GLuint index, const GLshort *v);
extern void  glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void  glVertexAttrib4NubvARB(GLuint index, const GLubyte *v);
extern void  glVertexAttrib4NuivARB(GLuint index, const GLuint *v);
extern void  glVertexAttrib4NusvARB(GLuint index, const GLushort *v);
extern void  glVertexAttrib4bvARB(GLuint index, const GLbyte *v);
extern void  glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glVertexAttrib4dvARB(GLuint index, const GLdouble *v);
extern void  glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glVertexAttrib4fvARB(GLuint index, const GLfloat *v);
extern void  glVertexAttrib4ivARB(GLuint index, const GLint *v);
extern void  glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void  glVertexAttrib4svARB(GLuint index, const GLshort *v);
extern void  glVertexAttrib4ubvARB(GLuint index, const GLubyte *v);
extern void  glVertexAttrib4uivARB(GLuint index, const GLuint *v);
extern void  glVertexAttrib4usvARB(GLuint index, const GLushort *v);
extern void  glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
extern void  glEnableVertexAttribArrayARB(GLuint index);
extern void  glDisableVertexAttribArrayARB(GLuint index);
extern void  glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble *params);
extern void  glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat *params);
extern void  glGetVertexAttribivARB(GLuint index, GLenum pname, GLint *params);
extern void  glGetVertexAttribPointervARB(GLuint index, GLenum pname, void **pointer);
extern void  glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name);
extern void  glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
extern GLint  glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name);
extern void  glWindowPos2dARB(GLdouble x, GLdouble y);
extern void  glWindowPos2dvARB(const GLdouble *v);
extern void  glWindowPos2fARB(GLfloat x, GLfloat y);
extern void  glWindowPos2fvARB(const GLfloat *v);
extern void  glWindowPos2iARB(GLint x, GLint y);
extern void  glWindowPos2ivARB(const GLint *v);
extern void  glWindowPos2sARB(GLshort x, GLshort y);
extern void  glWindowPos2svARB(const GLshort *v);
extern void  glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
extern void  glWindowPos3dvARB(const GLdouble *v);
extern void  glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
extern void  glWindowPos3fvARB(const GLfloat *v);
extern void  glWindowPos3iARB(GLint x, GLint y, GLint z);
extern void  glWindowPos3ivARB(const GLint *v);
extern void  glWindowPos3sARB(GLshort x, GLshort y, GLshort z);
extern void  glWindowPos3svARB(const GLshort *v);
extern void  glMultiTexCoord1bOES(GLenum texture, GLbyte s);
extern void  glMultiTexCoord1bvOES(GLenum texture, const GLbyte *coords);
extern void  glMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t);
extern void  glMultiTexCoord2bvOES(GLenum texture, const GLbyte *coords);
extern void  glMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
extern void  glMultiTexCoord3bvOES(GLenum texture, const GLbyte *coords);
extern void  glMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
extern void  glMultiTexCoord4bvOES(GLenum texture, const GLbyte *coords);
extern void  glTexCoord1bOES(GLbyte s);
extern void  glTexCoord1bvOES(const GLbyte *coords);
extern void  glTexCoord2bOES(GLbyte s, GLbyte t);
extern void  glTexCoord2bvOES(const GLbyte *coords);
extern void  glTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r);
extern void  glTexCoord3bvOES(const GLbyte *coords);
extern void  glTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
extern void  glTexCoord4bvOES(const GLbyte *coords);
extern void  glVertex2bOES(GLbyte x, GLbyte y);
extern void  glVertex2bvOES(const GLbyte *coords);
extern void  glVertex3bOES(GLbyte x, GLbyte y, GLbyte z);
extern void  glVertex3bvOES(const GLbyte *coords);
extern void  glVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
extern void  glVertex4bvOES(const GLbyte *coords);
extern void  glAlphaFuncxOES(GLenum func, GLfixed ref);
extern void  glClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern void  glClearDepthxOES(GLfixed depth);
extern void  glClipPlanexOES(GLenum plane, const GLfixed *equation);
extern void  glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern void  glDepthRangexOES(GLfixed n, GLfixed f);
extern void  glFogxOES(GLenum pname, GLfixed param);
extern void  glFogxvOES(GLenum pname, const GLfixed *param);
extern void  glFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
extern void  glGetClipPlanexOES(GLenum plane, GLfixed *equation);
extern void  glGetFixedvOES(GLenum pname, GLfixed *params);
extern void  glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed *params);
extern void  glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
extern void  glLightModelxOES(GLenum pname, GLfixed param);
extern void  glLightModelxvOES(GLenum pname, const GLfixed *param);
extern void  glLightxOES(GLenum light, GLenum pname, GLfixed param);
extern void  glLightxvOES(GLenum light, GLenum pname, const GLfixed *params);
extern void  glLineWidthxOES(GLfixed width);
extern void  glLoadMatrixxOES(const GLfixed *m);
extern void  glMaterialxOES(GLenum face, GLenum pname, GLfixed param);
extern void  glMaterialxvOES(GLenum face, GLenum pname, const GLfixed *param);
extern void  glMultMatrixxOES(const GLfixed *m);
extern void  glMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
extern void  glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
extern void  glOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
extern void  glPointParameterxvOES(GLenum pname, const GLfixed *params);
extern void  glPointSizexOES(GLfixed size);
extern void  glPolygonOffsetxOES(GLfixed factor, GLfixed units);
extern void  glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
extern void  glScalexOES(GLfixed x, GLfixed y, GLfixed z);
extern void  glTexEnvxOES(GLenum target, GLenum pname, GLfixed param);
extern void  glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed *params);
extern void  glTexParameterxOES(GLenum target, GLenum pname, GLfixed param);
extern void  glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed *params);
extern void  glTranslatexOES(GLfixed x, GLfixed y, GLfixed z);
extern void  glAccumxOES(GLenum op, GLfixed value);
extern void  glBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
extern void  glBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern void  glClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern void  glColor3xOES(GLfixed red, GLfixed green, GLfixed blue);
extern void  glColor3xvOES(const GLfixed *components);
extern void  glColor4xvOES(const GLfixed *components);
extern void  glConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param);
extern void  glConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed *params);
extern void  glEvalCoord1xOES(GLfixed u);
extern void  glEvalCoord1xvOES(const GLfixed *coords);
extern void  glEvalCoord2xOES(GLfixed u, GLfixed v);
extern void  glEvalCoord2xvOES(const GLfixed *coords);
extern void  glFeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed *buffer);
extern void  glGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
extern void  glGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
extern void  glGetLightxOES(GLenum light, GLenum pname, GLfixed *params);
extern void  glGetMapxvOES(GLenum target, GLenum query, GLfixed *v);
extern void  glGetMaterialxOES(GLenum face, GLenum pname, GLfixed param);
extern void  glGetPixelMapxv(GLenum map, GLint size, GLfixed *values);
extern void  glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params);
extern void  glGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed *params);
extern void  glIndexxOES(GLfixed component);
extern void  glIndexxvOES(const GLfixed *component);
extern void  glLoadTransposeMatrixxOES(const GLfixed *m);
extern void  glMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
extern void  glMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
extern void  glMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2);
extern void  glMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
extern void  glMultTransposeMatrixxOES(const GLfixed *m);
extern void  glMultiTexCoord1xOES(GLenum texture, GLfixed s);
extern void  glMultiTexCoord1xvOES(GLenum texture, const GLfixed *coords);
extern void  glMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t);
extern void  glMultiTexCoord2xvOES(GLenum texture, const GLfixed *coords);
extern void  glMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
extern void  glMultiTexCoord3xvOES(GLenum texture, const GLfixed *coords);
extern void  glMultiTexCoord4xvOES(GLenum texture, const GLfixed *coords);
extern void  glNormal3xvOES(const GLfixed *coords);
extern void  glPassThroughxOES(GLfixed token);
extern void  glPixelMapx(GLenum map, GLint size, const GLfixed *values);
extern void  glPixelStorex(GLenum pname, GLfixed param);
extern void  glPixelTransferxOES(GLenum pname, GLfixed param);
extern void  glPixelZoomxOES(GLfixed xfactor, GLfixed yfactor);
extern void  glPrioritizeTexturesxOES(GLsizei n, const GLuint *textures, const GLfixed *priorities);
extern void  glRasterPos2xOES(GLfixed x, GLfixed y);
extern void  glRasterPos2xvOES(const GLfixed *coords);
extern void  glRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z);
extern void  glRasterPos3xvOES(const GLfixed *coords);
extern void  glRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
extern void  glRasterPos4xvOES(const GLfixed *coords);
extern void  glRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
extern void  glRectxvOES(const GLfixed *v1, const GLfixed *v2);
extern void  glTexCoord1xOES(GLfixed s);
extern void  glTexCoord1xvOES(const GLfixed *coords);
extern void  glTexCoord2xOES(GLfixed s, GLfixed t);
extern void  glTexCoord2xvOES(const GLfixed *coords);
extern void  glTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r);
extern void  glTexCoord3xvOES(const GLfixed *coords);
extern void  glTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
extern void  glTexCoord4xvOES(const GLfixed *coords);
extern void  glTexGenxOES(GLenum coord, GLenum pname, GLfixed param);
extern void  glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params);
extern void  glVertex2xOES(GLfixed x);
extern void  glVertex2xvOES(const GLfixed *coords);
extern void  glVertex3xOES(GLfixed x, GLfixed y);
extern void  glVertex3xvOES(const GLfixed *coords);
extern void  glVertex4xOES(GLfixed x, GLfixed y, GLfixed z);
extern void  glVertex4xvOES(const GLfixed *coords);
extern GLbitfield  glQueryMatrixxOES(GLfixed *mantissa, GLint *exponent);
extern void  glClearDepthfOES(GLclampf depth);
extern void  glClipPlanefOES(GLenum plane, const GLfloat *equation);
extern void  glDepthRangefOES(GLclampf n, GLclampf f);
extern void  glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
extern void  glGetClipPlanefOES(GLenum plane, GLfloat *equation);
extern void  glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
extern void  glTbufferMask3DFX(GLuint mask);
extern void  glDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
extern void  glDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
extern void  glDebugMessageCallbackAMD(GLDEBUGPROCAMD callback, void *userParam);
extern GLuint  glGetDebugMessageLogAMD(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
extern void  glBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst);
extern void  glBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void  glBlendEquationIndexedAMD(GLuint buf, GLenum mode);
extern void  glBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern void  glFramebufferSamplePositionsfvAMD(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values);
extern void  glNamedFramebufferSamplePositionsfvAMD(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values);
extern void  glGetFramebufferParameterfvAMD(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);
extern void  glGetNamedFramebufferParameterfvAMD(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);
extern void  glVertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param);
extern void  glMultiDrawArraysIndirectAMD(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
extern void  glMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
extern void  glGenNamesAMD(GLenum identifier, GLuint num, GLuint *names);
extern void  glDeleteNamesAMD(GLenum identifier, GLuint num, const GLuint *names);
extern GLboolean  glIsNameAMD(GLenum identifier, GLuint name);
extern void  glQueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, GLuint param);
extern void  glSetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat *val);
extern void  glTexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
extern void  glTextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
extern void  glStencilOpValueAMD(GLenum face, GLuint value);
extern void  glTessellationFactorAMD(GLfloat factor);
extern void  glTessellationModeAMD(GLenum mode);
extern void  glElementPointerAPPLE(GLenum type, const void *pointer);
extern void  glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
extern void  glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
extern void  glMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
extern void  glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
extern void  glGenFencesAPPLE(GLsizei n, GLuint *fences);
extern void  glDeleteFencesAPPLE(GLsizei n, const GLuint *fences);
extern void  glSetFenceAPPLE(GLuint fence);
extern GLboolean  glIsFenceAPPLE(GLuint fence);
extern GLboolean  glTestFenceAPPLE(GLuint fence);
extern void  glFinishFenceAPPLE(GLuint fence);
extern GLboolean  glTestObjectAPPLE(GLenum object, GLuint name);
extern void  glFinishObjectAPPLE(GLenum object, GLint name);
extern void  glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);
extern void  glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);
extern GLenum  glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
extern GLenum  glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
extern void  glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint *params);
extern void  glTextureRangeAPPLE(GLenum target, GLsizei length, const void *pointer);
extern void  glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, void **params);
extern void  glBindVertexArrayAPPLE(GLuint array);
extern void  glDeleteVertexArraysAPPLE(GLsizei n, const GLuint *arrays);
extern void  glGenVertexArraysAPPLE(GLsizei n, GLuint *arrays);
extern GLboolean  glIsVertexArrayAPPLE(GLuint array);
extern void  glVertexArrayRangeAPPLE(GLsizei length, void *pointer);
extern void  glFlushVertexArrayRangeAPPLE(GLsizei length, void *pointer);
extern void  glVertexArrayParameteriAPPLE(GLenum pname, GLint param);
extern void  glEnableVertexAttribAPPLE(GLuint index, GLenum pname);
extern void  glDisableVertexAttribAPPLE(GLuint index, GLenum pname);
extern GLboolean  glIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname);
extern void  glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
extern void  glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
extern void  glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
extern void  glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
extern void  glDrawBuffersATI(GLsizei n, const GLenum *bufs);
extern void  glElementPointerATI(GLenum type, const void *pointer);
extern void  glDrawElementArrayATI(GLenum mode, GLsizei count);
extern void  glDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count);
extern void  glTexBumpParameterivATI(GLenum pname, const GLint *param);
extern void  glTexBumpParameterfvATI(GLenum pname, const GLfloat *param);
extern void  glGetTexBumpParameterivATI(GLenum pname, GLint *param);
extern void  glGetTexBumpParameterfvATI(GLenum pname, GLfloat *param);
extern GLuint  glGenFragmentShadersATI(GLuint range);
extern void  glBindFragmentShaderATI(GLuint id);
extern void  glDeleteFragmentShaderATI(GLuint id);
extern void  glBeginFragmentShaderATI(void);
extern void  glEndFragmentShaderATI(void);
extern void  glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle);
extern void  glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle);
extern void  glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
extern void  glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
extern void  glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
extern void  glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
extern void  glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
extern void  glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
extern void  glSetFragmentShaderConstantATI(GLuint dst, const GLfloat *value);
extern void * glMapObjectBufferATI(GLuint buffer);
extern void  glUnmapObjectBufferATI(GLuint buffer);
extern void  glPNTrianglesiATI(GLenum pname, GLint param);
extern void  glPNTrianglesfATI(GLenum pname, GLfloat param);
extern void  glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern void  glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
extern GLuint  glNewObjectBufferATI(GLsizei size, const void *pointer, GLenum usage);
extern GLboolean  glIsObjectBufferATI(GLuint buffer);
extern void  glUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
extern void  glGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat *params);
extern void  glGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint *params);
extern void  glFreeObjectBufferATI(GLuint buffer);
extern void  glArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
extern void  glGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat *params);
extern void  glGetArrayObjectivATI(GLenum array, GLenum pname, GLint *params);
extern void  glVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
extern void  glGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat *params);
extern void  glGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint *params);
extern void  glVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
extern void  glGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat *params);
extern void  glGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint *params);
extern void  glVertexStream1sATI(GLenum stream, GLshort x);
extern void  glVertexStream1svATI(GLenum stream, const GLshort *coords);
extern void  glVertexStream1iATI(GLenum stream, GLint x);
extern void  glVertexStream1ivATI(GLenum stream, const GLint *coords);
extern void  glVertexStream1fATI(GLenum stream, GLfloat x);
extern void  glVertexStream1fvATI(GLenum stream, const GLfloat *coords);
extern void  glVertexStream1dATI(GLenum stream, GLdouble x);
extern void  glVertexStream1dvATI(GLenum stream, const GLdouble *coords);
extern void  glVertexStream2sATI(GLenum stream, GLshort x, GLshort y);
extern void  glVertexStream2svATI(GLenum stream, const GLshort *coords);
extern void  glVertexStream2iATI(GLenum stream, GLint x, GLint y);
extern void  glVertexStream2ivATI(GLenum stream, const GLint *coords);
extern void  glVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y);
extern void  glVertexStream2fvATI(GLenum stream, const GLfloat *coords);
extern void  glVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y);
extern void  glVertexStream2dvATI(GLenum stream, const GLdouble *coords);
extern void  glVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z);
extern void  glVertexStream3svATI(GLenum stream, const GLshort *coords);
extern void  glVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z);
extern void  glVertexStream3ivATI(GLenum stream, const GLint *coords);
extern void  glVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
extern void  glVertexStream3fvATI(GLenum stream, const GLfloat *coords);
extern void  glVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
extern void  glVertexStream3dvATI(GLenum stream, const GLdouble *coords);
extern void  glVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
extern void  glVertexStream4svATI(GLenum stream, const GLshort *coords);
extern void  glVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w);
extern void  glVertexStream4ivATI(GLenum stream, const GLint *coords);
extern void  glVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glVertexStream4fvATI(GLenum stream, const GLfloat *coords);
extern void  glVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glVertexStream4dvATI(GLenum stream, const GLdouble *coords);
extern void  glNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
extern void  glNormalStream3bvATI(GLenum stream, const GLbyte *coords);
extern void  glNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
extern void  glNormalStream3svATI(GLenum stream, const GLshort *coords);
extern void  glNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz);
extern void  glNormalStream3ivATI(GLenum stream, const GLint *coords);
extern void  glNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
extern void  glNormalStream3fvATI(GLenum stream, const GLfloat *coords);
extern void  glNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
extern void  glNormalStream3dvATI(GLenum stream, const GLdouble *coords);
extern void  glClientActiveVertexStreamATI(GLenum stream);
extern void  glVertexBlendEnviATI(GLenum pname, GLint param);
extern void  glVertexBlendEnvfATI(GLenum pname, GLfloat param);
extern void  glUniformBufferEXT(GLuint program, GLint location, GLuint buffer);
extern GLint  glGetUniformBufferSizeEXT(GLuint program, GLint location);
extern GLintptr  glGetUniformOffsetEXT(GLuint program, GLint location);
extern void  glBlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void  glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
extern void  glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern void  glBlendEquationEXT(GLenum mode);
extern void  glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
extern void  glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern void  glLockArraysEXT(GLint first, GLsizei count);
extern void  glUnlockArraysEXT(void);
extern void  glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
extern void  glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
extern void  glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params);
extern void  glConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params);
extern void  glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params);
extern void  glConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint *params);
extern void  glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern void  glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, void *image);
extern void  glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint *params);
extern void  glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
extern void  glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
extern void  glTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz);
extern void  glTangent3bvEXT(const GLbyte *v);
extern void  glTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz);
extern void  glTangent3dvEXT(const GLdouble *v);
extern void  glTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz);
extern void  glTangent3fvEXT(const GLfloat *v);
extern void  glTangent3iEXT(GLint tx, GLint ty, GLint tz);
extern void  glTangent3ivEXT(const GLint *v);
extern void  glTangent3sEXT(GLshort tx, GLshort ty, GLshort tz);
extern void  glTangent3svEXT(const GLshort *v);
extern void  glBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz);
extern void  glBinormal3bvEXT(const GLbyte *v);
extern void  glBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz);
extern void  glBinormal3dvEXT(const GLdouble *v);
extern void  glBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz);
extern void  glBinormal3fvEXT(const GLfloat *v);
extern void  glBinormal3iEXT(GLint bx, GLint by, GLint bz);
extern void  glBinormal3ivEXT(const GLint *v);
extern void  glBinormal3sEXT(GLshort bx, GLshort by, GLshort bz);
extern void  glBinormal3svEXT(const GLshort *v);
extern void  glTangentPointerEXT(GLenum type, GLsizei stride, const void *pointer);
extern void  glBinormalPointerEXT(GLenum type, GLsizei stride, const void *pointer);
extern void  glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern void  glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern void  glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void  glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glCullParameterdvEXT(GLenum pname, GLdouble *params);
extern void  glCullParameterfvEXT(GLenum pname, GLfloat *params);
extern void  glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);
extern void  glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern void  glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
extern void  glBufferStorageExternalEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
extern void  glNamedBufferStorageExternalEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);
extern void  glFogCoordfEXT(GLfloat coord);
extern void  glFogCoordfvEXT(const GLfloat *coord);
extern void  glFogCoorddEXT(GLdouble coord);
extern void  glFogCoorddvEXT(const GLdouble *coord);
extern void  glFogCoordPointerEXT(GLenum type, GLsizei stride, const void *pointer);
extern void  glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern void  glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern GLboolean  glIsRenderbufferEXT(GLuint renderbuffer);
extern void  glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
extern void  glDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers);
extern void  glGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers);
extern void  glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params);
extern GLboolean  glIsFramebufferEXT(GLuint framebuffer);
extern void  glBindFramebufferEXT(GLenum target, GLuint framebuffer);
extern void  glDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers);
extern void  glGenFramebuffersEXT(GLsizei n, GLuint *framebuffers);
extern GLenum  glCheckFramebufferStatusEXT(GLenum target);
extern void  glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void  glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void  glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern void  glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void  glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params);
extern void  glGenerateMipmapEXT(GLenum target);
extern void  glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
extern void  glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
extern void  glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
extern void  glGetUniformuivEXT(GLuint program, GLint location, GLuint *params);
extern void  glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar *name);
extern GLint  glGetFragDataLocationEXT(GLuint program, const GLchar *name);
extern void  glUniform1uiEXT(GLint location, GLuint v0);
extern void  glUniform2uiEXT(GLint location, GLuint v0, GLuint v1);
extern void  glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern void  glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern void  glUniform1uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void  glUniform2uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void  glUniform3uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void  glUniform4uivEXT(GLint location, GLsizei count, const GLuint *value);
extern void  glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
extern void  glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint *params);
extern void  glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
extern void  glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint *params);
extern void  glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
extern void  glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink);
extern void  glResetHistogramEXT(GLenum target);
extern void  glResetMinmaxEXT(GLenum target);
extern void  glIndexFuncEXT(GLenum func, GLclampf ref);
extern void  glIndexMaterialEXT(GLenum face, GLenum mode);
extern void  glApplyTextureEXT(GLenum mode);
extern void  glTextureLightEXT(GLenum pname);
extern void  glTextureMaterialEXT(GLenum face, GLenum mode);
extern void  glGetUnsignedBytevEXT(GLenum pname, GLubyte *data);
extern void  glGetUnsignedBytei_vEXT(GLenum target, GLuint index, GLubyte *data);
extern void  glDeleteMemoryObjectsEXT(GLsizei n, const GLuint *memoryObjects);
extern GLboolean  glIsMemoryObjectEXT(GLuint memoryObject);
extern void  glCreateMemoryObjectsEXT(GLsizei n, GLuint *memoryObjects);
extern void  glMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, const GLint *params);
extern void  glGetMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint *params);
extern void  glTexStorageMem2DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
extern void  glTexStorageMem2DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern void  glTexStorageMem3DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
extern void  glTexStorageMem3DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern void  glBufferStorageMemEXT(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);
extern void  glTextureStorageMem2DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);
extern void  glTextureStorageMem2DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern void  glTextureStorageMem3DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);
extern void  glTextureStorageMem3DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);
extern void  glNamedBufferStorageMemEXT(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);
extern void  glTexStorageMem1DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
extern void  glTextureStorageMem1DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);
extern void  glImportMemoryFdEXT(GLuint memory, GLuint64 size, GLenum handleType, GLint fd);
extern void  glImportMemoryWin32HandleEXT(GLuint memory, GLuint64 size, GLenum handleType, void *handle);
extern void  glImportMemoryWin32NameEXT(GLuint memory, GLuint64 size, GLenum handleType, const void *name);
extern void  glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
extern void  glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
extern void  glSampleMaskEXT(GLclampf value, GLboolean invert);
extern void  glSamplePatternEXT(GLenum pattern);
extern void  glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
extern void  glGetColorTableEXT(GLenum target, GLenum format, GLenum type, void *data);
extern void  glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint *params);
extern void  glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
extern void  glPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param);
extern void  glPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param);
extern void  glPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint *params);
extern void  glPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params);
extern void  glGetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint *params);
extern void  glGetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
extern void  glPointParameterfEXT(GLenum pname, GLfloat param);
extern void  glPointParameterfvEXT(GLenum pname, const GLfloat *params);
extern void  glPolygonOffsetEXT(GLfloat factor, GLfloat bias);
extern void  glProvokingVertexEXT(GLenum mode);
extern void  glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue);
extern void  glSecondaryColor3bvEXT(const GLbyte *v);
extern void  glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue);
extern void  glSecondaryColor3dvEXT(const GLdouble *v);
extern void  glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue);
extern void  glSecondaryColor3fvEXT(const GLfloat *v);
extern void  glSecondaryColor3iEXT(GLint red, GLint green, GLint blue);
extern void  glSecondaryColor3ivEXT(const GLint *v);
extern void  glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue);
extern void  glSecondaryColor3svEXT(const GLshort *v);
extern void  glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue);
extern void  glSecondaryColor3ubvEXT(const GLubyte *v);
extern void  glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue);
extern void  glSecondaryColor3uivEXT(const GLuint *v);
extern void  glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue);
extern void  glSecondaryColor3usvEXT(const GLushort *v);
extern void  glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glGenSemaphoresEXT(GLsizei n, GLuint *semaphores);
extern void  glDeleteSemaphoresEXT(GLsizei n, const GLuint *semaphores);
extern GLboolean  glIsSemaphoreEXT(GLuint semaphore);
extern void  glSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, const GLuint64 *params);
extern void  glGetSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 *params);
extern void  glWaitSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts);
extern void  glSignalSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts);
extern void  glImportSemaphoreFdEXT(GLuint semaphore, GLenum handleType, GLint fd);
extern void  glImportSemaphoreWin32HandleEXT(GLuint semaphore, GLenum handleType, void *handle);
extern void  glImportSemaphoreWin32NameEXT(GLuint semaphore, GLenum handleType, const void *name);
extern void  glBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
extern void  glMemoryBarrierEXT(GLbitfield barriers);
extern void  glStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag);
extern void  glActiveStencilFaceEXT(GLenum face);
extern void  glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
extern void  glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
extern void  glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void  glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void  glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
extern void  glTexParameterIivEXT(GLenum target, GLenum pname, const GLint *params);
extern void  glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint *params);
extern void  glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint *params);
extern void  glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint *params);
extern void  glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha);
extern void  glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern GLboolean  glAreTexturesResidentEXT(GLsizei n, const GLuint *textures, GLboolean *residences);
extern void  glBindTextureEXT(GLenum target, GLuint texture);
extern void  glDeleteTexturesEXT(GLsizei n, const GLuint *textures);
extern void  glGenTexturesEXT(GLsizei n, GLuint *textures);
extern GLboolean  glIsTextureEXT(GLuint texture);
extern void  glPrioritizeTexturesEXT(GLsizei n, const GLuint *textures, const GLclampf *priorities);
extern void  glTextureNormalEXT(GLenum mode);
extern void  glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 *params);
extern void  glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 *params);
extern void  glBeginTransformFeedbackEXT(GLenum primitiveMode);
extern void  glEndTransformFeedbackEXT(void);
extern void  glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
extern void  glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);
extern void  glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
extern void  glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
extern void  glArrayElementEXT(GLint i);
extern void  glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
extern void  glDrawArraysEXT(GLenum mode, GLint first, GLsizei count);
extern void  glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean *pointer);
extern void  glGetPointervEXT(GLenum pname, void **params);
extern void  glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
extern void  glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
extern void  glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
extern void  glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
extern void  glVertexAttribL1dEXT(GLuint index, GLdouble x);
extern void  glVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y);
extern void  glVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void  glVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glVertexAttribL1dvEXT(GLuint index, const GLdouble *v);
extern void  glVertexAttribL2dvEXT(GLuint index, const GLdouble *v);
extern void  glVertexAttribL3dvEXT(GLuint index, const GLdouble *v);
extern void  glVertexAttribL4dvEXT(GLuint index, const GLdouble *v);
extern void  glVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble *params);
extern void  glBeginVertexShaderEXT(void);
extern void  glEndVertexShaderEXT(void);
extern void  glBindVertexShaderEXT(GLuint id);
extern GLuint  glGenVertexShadersEXT(GLuint range);
extern void  glDeleteVertexShaderEXT(GLuint id);
extern void  glShaderOp1EXT(GLenum op, GLuint res, GLuint arg1);
extern void  glShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
extern void  glShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
extern void  glSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
extern void  glWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
extern void  glInsertComponentEXT(GLuint res, GLuint src, GLuint num);
extern void  glExtractComponentEXT(GLuint res, GLuint src, GLuint num);
extern GLuint  glGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
extern void  glSetInvariantEXT(GLuint id, GLenum type, const void *addr);
extern void  glSetLocalConstantEXT(GLuint id, GLenum type, const void *addr);
extern void  glVariantbvEXT(GLuint id, const GLbyte *addr);
extern void  glVariantsvEXT(GLuint id, const GLshort *addr);
extern void  glVariantivEXT(GLuint id, const GLint *addr);
extern void  glVariantfvEXT(GLuint id, const GLfloat *addr);
extern void  glVariantdvEXT(GLuint id, const GLdouble *addr);
extern void  glVariantubvEXT(GLuint id, const GLubyte *addr);
extern void  glVariantusvEXT(GLuint id, const GLushort *addr);
extern void  glVariantuivEXT(GLuint id, const GLuint *addr);
extern void  glVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const void *addr);
extern void  glEnableVariantClientStateEXT(GLuint id);
extern void  glDisableVariantClientStateEXT(GLuint id);
extern GLuint  glBindLightParameterEXT(GLenum light, GLenum value);
extern GLuint  glBindMaterialParameterEXT(GLenum face, GLenum value);
extern GLuint  glBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value);
extern GLuint  glBindTextureUnitParameterEXT(GLenum unit, GLenum value);
extern GLuint  glBindParameterEXT(GLenum value);
extern GLboolean  glIsVariantEnabledEXT(GLuint id, GLenum cap);
extern void  glGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data);
extern void  glGetVariantIntegervEXT(GLuint id, GLenum value, GLint *data);
extern void  glGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat *data);
extern void  glGetVariantPointervEXT(GLuint id, GLenum value, void **data);
extern void  glGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data);
extern void  glGetInvariantIntegervEXT(GLuint id, GLenum value, GLint *data);
extern void  glGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat *data);
extern void  glGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean *data);
extern void  glGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint *data);
extern void  glGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat *data);
extern void  glVertexWeightfEXT(GLfloat weight);
extern void  glVertexWeightfvEXT(const GLfloat *weight);
extern void  glVertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer);
extern GLboolean  glAcquireKeyedMutexWin32EXT(GLuint memory, GLuint64 key, GLuint timeout);
extern GLboolean  glReleaseKeyedMutexWin32EXT(GLuint memory, GLuint64 key);
extern GLsync  glImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
extern void  glFrameTerminatorGREMEDY(void);
extern void  glStringMarkerGREMEDY(GLsizei len, const void *string);
extern void  glImageTransformParameteriHP(GLenum target, GLenum pname, GLint param);
extern void  glImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param);
extern void  glImageTransformParameterivHP(GLenum target, GLenum pname, const GLint *params);
extern void  glImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat *params);
extern void  glGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint *params);
extern void  glGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat *params);
extern void  glMultiModeDrawArraysIBM(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
extern void  glMultiModeDrawElementsIBM(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);
extern void  glFlushStaticDataIBM(GLenum target);
extern void  glColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
extern void  glSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
extern void  glEdgeFlagPointerListIBM(GLint stride, const GLboolean **pointer, GLint ptrstride);
extern void  glFogCoordPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
extern void  glIndexPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
extern void  glNormalPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
extern void  glTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
extern void  glVertexPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
extern void  glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern void  glSyncTextureINTEL(GLuint texture);
extern void  glUnmapTexture2DINTEL(GLuint texture, GLint level);
extern void * glMapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);
extern void  glVertexPointervINTEL(GLint size, GLenum type, const void **pointer);
extern void  glNormalPointervINTEL(GLenum type, const void **pointer);
extern void  glColorPointervINTEL(GLint size, GLenum type, const void **pointer);
extern void  glTexCoordPointervINTEL(GLint size, GLenum type, const void **pointer);
extern void  glResizeBuffersMESA(void);
extern void  glWindowPos2dMESA(GLdouble x, GLdouble y);
extern void  glWindowPos2dvMESA(const GLdouble *v);
extern void  glWindowPos2fMESA(GLfloat x, GLfloat y);
extern void  glWindowPos2fvMESA(const GLfloat *v);
extern void  glWindowPos2iMESA(GLint x, GLint y);
extern void  glWindowPos2ivMESA(const GLint *v);
extern void  glWindowPos2sMESA(GLshort x, GLshort y);
extern void  glWindowPos2svMESA(const GLshort *v);
extern void  glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z);
extern void  glWindowPos3dvMESA(const GLdouble *v);
extern void  glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z);
extern void  glWindowPos3fvMESA(const GLfloat *v);
extern void  glWindowPos3iMESA(GLint x, GLint y, GLint z);
extern void  glWindowPos3ivMESA(const GLint *v);
extern void  glWindowPos3sMESA(GLshort x, GLshort y, GLshort z);
extern void  glWindowPos3svMESA(const GLshort *v);
extern void  glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glWindowPos4dvMESA(const GLdouble *v);
extern void  glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glWindowPos4fvMESA(const GLfloat *v);
extern void  glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w);
extern void  glWindowPos4ivMESA(const GLint *v);
extern void  glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w);
extern void  glWindowPos4svMESA(const GLshort *v);
extern void  glBeginConditionalRenderNVX(GLuint id);
extern void  glEndConditionalRenderNVX(void);
extern void  glLGPUNamedBufferSubDataNVX(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
extern void  glLGPUCopyImageSubDataNVX(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
extern void  glLGPUInterlockNVX(void);
extern void  glAlphaToCoverageDitherControlNV(GLenum mode);
extern void  glCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
extern void  glDepthRangedNV(GLdouble zNear, GLdouble zFar);
extern void  glClearDepthdNV(GLdouble depth);
extern void  glDepthBoundsdNV(GLdouble zmin, GLdouble zmax);
extern void  glDrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
extern void  glMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
extern void  glMapParameterivNV(GLenum target, GLenum pname, const GLint *params);
extern void  glMapParameterfvNV(GLenum target, GLenum pname, const GLfloat *params);
extern void  glGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
extern void  glGetMapParameterivNV(GLenum target, GLenum pname, GLint *params);
extern void  glGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint *params);
extern void  glGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params);
extern void  glEvalMapsNV(GLenum target, GLenum mode);
extern void  glGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat *val);
extern void  glSampleMaskIndexedNV(GLuint index, GLbitfield mask);
extern void  glTexRenderbufferNV(GLenum target, GLuint renderbuffer);
extern void  glDeleteFencesNV(GLsizei n, const GLuint *fences);
extern void  glGenFencesNV(GLsizei n, GLuint *fences);
extern GLboolean  glIsFenceNV(GLuint fence);
extern GLboolean  glTestFenceNV(GLuint fence);
extern void  glGetFenceivNV(GLuint fence, GLenum pname, GLint *params);
extern void  glFinishFenceNV(GLuint fence);
extern void  glSetFenceNV(GLuint fence, GLenum condition);
extern void  glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
extern void  glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
extern void  glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
extern void  glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
extern void  glProgramVertexLimitNV(GLenum target, GLint limit);
extern void  glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern void  glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern void  glRenderGpuMaskNV(GLbitfield mask);
extern void  glMulticastBufferSubDataNV(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
extern void  glMulticastCopyBufferSubDataNV(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void  glMulticastCopyImageSubDataNV(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern void  glMulticastBlitFramebufferNV(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern void  glMulticastFramebufferSampleLocationsfvNV(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
extern void  glMulticastBarrierNV(void);
extern void  glMulticastWaitSyncNV(GLuint signalGpu, GLbitfield waitGpuMask);
extern void  glMulticastGetQueryObjectivNV(GLuint gpu, GLuint id, GLenum pname, GLint *params);
extern void  glMulticastGetQueryObjectuivNV(GLuint gpu, GLuint id, GLenum pname, GLuint *params);
extern void  glMulticastGetQueryObjecti64vNV(GLuint gpu, GLuint id, GLenum pname, GLint64 *params);
extern void  glMulticastGetQueryObjectui64vNV(GLuint gpu, GLuint id, GLenum pname, GLuint64 *params);
extern void  glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern void  glProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint *params);
extern void  glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params);
extern void  glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern void  glProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint *params);
extern void  glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params);
extern void  glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern void  glProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint *params);
extern void  glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params);
extern void  glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern void  glProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint *params);
extern void  glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params);
extern void  glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint *params);
extern void  glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint *params);
extern void  glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint *params);
extern void  glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint *params);
extern void  glProgramSubroutineParametersuivNV(GLenum target, GLsizei count, const GLuint *params);
extern void  glGetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint *param);
extern void  glVertex2hNV(GLhalfNV x, GLhalfNV y);
extern void  glVertex2hvNV(const GLhalfNV *v);
extern void  glVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z);
extern void  glVertex3hvNV(const GLhalfNV *v);
extern void  glVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
extern void  glVertex4hvNV(const GLhalfNV *v);
extern void  glNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
extern void  glNormal3hvNV(const GLhalfNV *v);
extern void  glColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
extern void  glColor3hvNV(const GLhalfNV *v);
extern void  glColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
extern void  glColor4hvNV(const GLhalfNV *v);
extern void  glTexCoord1hNV(GLhalfNV s);
extern void  glTexCoord1hvNV(const GLhalfNV *v);
extern void  glTexCoord2hNV(GLhalfNV s, GLhalfNV t);
extern void  glTexCoord2hvNV(const GLhalfNV *v);
extern void  glTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r);
extern void  glTexCoord3hvNV(const GLhalfNV *v);
extern void  glTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
extern void  glTexCoord4hvNV(const GLhalfNV *v);
extern void  glMultiTexCoord1hNV(GLenum target, GLhalfNV s);
extern void  glMultiTexCoord1hvNV(GLenum target, const GLhalfNV *v);
extern void  glMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t);
extern void  glMultiTexCoord2hvNV(GLenum target, const GLhalfNV *v);
extern void  glMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
extern void  glMultiTexCoord3hvNV(GLenum target, const GLhalfNV *v);
extern void  glMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
extern void  glMultiTexCoord4hvNV(GLenum target, const GLhalfNV *v);
extern void  glFogCoordhNV(GLhalfNV fog);
extern void  glFogCoordhvNV(const GLhalfNV *fog);
extern void  glSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
extern void  glSecondaryColor3hvNV(const GLhalfNV *v);
extern void  glVertexWeighthNV(GLhalfNV weight);
extern void  glVertexWeighthvNV(const GLhalfNV *weight);
extern void  glVertexAttrib1hNV(GLuint index, GLhalfNV x);
extern void  glVertexAttrib1hvNV(GLuint index, const GLhalfNV *v);
extern void  glVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y);
extern void  glVertexAttrib2hvNV(GLuint index, const GLhalfNV *v);
extern void  glVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
extern void  glVertexAttrib3hvNV(GLuint index, const GLhalfNV *v);
extern void  glVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
extern void  glVertexAttrib4hvNV(GLuint index, const GLhalfNV *v);
extern void  glVertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
extern void  glVertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
extern void  glVertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
extern void  glVertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
extern void  glGenOcclusionQueriesNV(GLsizei n, GLuint *ids);
extern void  glDeleteOcclusionQueriesNV(GLsizei n, const GLuint *ids);
extern GLboolean  glIsOcclusionQueryNV(GLuint id);
extern void  glBeginOcclusionQueryNV(GLuint id);
extern void  glEndOcclusionQueryNV(void);
extern void  glGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint *params);
extern void  glGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint *params);
extern void  glProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
extern void  glProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
extern void  glProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
extern void  glPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
extern void  glPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
extern void  glPathFogGenNV(GLenum genMode);
extern void  glGetPathColorGenivNV(GLenum color, GLenum pname, GLint *value);
extern void  glGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat *value);
extern void  glGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint *value);
extern void  glGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat *value);
extern void  glPixelDataRangeNV(GLenum target, GLsizei length, const void *pointer);
extern void  glFlushPixelDataRangeNV(GLenum target);
extern void  glPointParameteriNV(GLenum pname, GLint param);
extern void  glPointParameterivNV(GLenum pname, const GLint *params);
extern void  glPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
extern void  glPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
extern void  glGetVideoivNV(GLuint video_slot, GLenum pname, GLint *params);
extern void  glGetVideouivNV(GLuint video_slot, GLenum pname, GLuint *params);
extern void  glGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT *params);
extern void  glGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT *params);
extern void  glPrimitiveRestartNV(void);
extern void  glPrimitiveRestartIndexNV(GLuint index);
extern GLint  glQueryResourceNV(GLenum queryType, GLint tagId, GLuint bufSize, GLint *buffer);
extern void  glGenQueryResourceTagNV(GLsizei n, GLint *tagIds);
extern void  glDeleteQueryResourceTagNV(GLsizei n, const GLint *tagIds);
extern void  glQueryResourceTagNV(GLint tagId, const GLchar *tagString);
extern void  glCombinerParameterfvNV(GLenum pname, const GLfloat *params);
extern void  glCombinerParameterfNV(GLenum pname, GLfloat param);
extern void  glCombinerParameterivNV(GLenum pname, const GLint *params);
extern void  glCombinerParameteriNV(GLenum pname, GLint param);
extern void  glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern void  glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
extern void  glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern void  glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
extern void  glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
extern void  glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
extern void  glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint *params);
extern void  glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat *params);
extern void  glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint *params);
extern void  glCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat *params);
extern void  glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat *params);
extern void  glTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern void  glTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern void  glTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern void  glTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern void  glTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern void  glTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern void  glBeginTransformFeedbackNV(GLenum primitiveMode);
extern void  glEndTransformFeedbackNV(void);
extern void  glTransformFeedbackAttribsNV(GLsizei count, const GLint *attribs, GLenum bufferMode);
extern void  glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
extern void  glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer);
extern void  glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
extern void  glActiveVaryingNV(GLuint program, const GLchar *name);
extern GLint  glGetVaryingLocationNV(GLuint program, const GLchar *name);
extern void  glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
extern void  glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint *location);
extern void  glTransformFeedbackStreamAttribsNV(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
extern void  glBindTransformFeedbackNV(GLenum target, GLuint id);
extern void  glDeleteTransformFeedbacksNV(GLsizei n, const GLuint *ids);
extern void  glGenTransformFeedbacksNV(GLsizei n, GLuint *ids);
extern GLboolean  glIsTransformFeedbackNV(GLuint id);
extern void  glPauseTransformFeedbackNV(void);
extern void  glResumeTransformFeedbackNV(void);
extern void  glDrawTransformFeedbackNV(GLenum mode, GLuint id);
extern void  glVDPAUInitNV(const void *vdpDevice, const void *getProcAddress);
extern void  glVDPAUFiniNV(void);
extern GLvdpauSurfaceNV  glVDPAURegisterVideoSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
extern GLvdpauSurfaceNV  glVDPAURegisterOutputSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
extern GLboolean  glVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface);
extern void  glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface);
extern void  glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
extern void  glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access);
extern void  glVDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
extern void  glVDPAUUnmapSurfacesNV(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
extern GLvdpauSurfaceNV  glVDPAURegisterVideoSurfaceWithPictureStructureNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames, GLboolean isFrameStructure);
extern void  glFlushVertexArrayRangeNV(void);
extern void  glVertexArrayRangeNV(GLsizei length, const void *pointer);
extern GLboolean  glAreProgramsResidentNV(GLsizei n, const GLuint *programs, GLboolean *residences);
extern void  glBindProgramNV(GLenum target, GLuint id);
extern void  glDeleteProgramsNV(GLsizei n, const GLuint *programs);
extern void  glExecuteProgramNV(GLenum target, GLuint id, const GLfloat *params);
extern void  glGenProgramsNV(GLsizei n, GLuint *programs);
extern void  glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble *params);
extern void  glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params);
extern void  glGetProgramivNV(GLuint id, GLenum pname, GLint *params);
extern void  glGetProgramStringNV(GLuint id, GLenum pname, GLubyte *program);
extern void  glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint *params);
extern void  glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble *params);
extern void  glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat *params);
extern void  glGetVertexAttribivNV(GLuint index, GLenum pname, GLint *params);
extern void  glGetVertexAttribPointervNV(GLuint index, GLenum pname, void **pointer);
extern GLboolean  glIsProgramNV(GLuint id);
extern void  glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
extern void  glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble *v);
extern void  glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat *v);
extern void  glProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble *v);
extern void  glProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat *v);
extern void  glRequestResidentProgramsNV(GLsizei n, const GLuint *programs);
extern void  glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
extern void  glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
extern void  glVertexAttrib1dNV(GLuint index, GLdouble x);
extern void  glVertexAttrib1dvNV(GLuint index, const GLdouble *v);
extern void  glVertexAttrib1fNV(GLuint index, GLfloat x);
extern void  glVertexAttrib1fvNV(GLuint index, const GLfloat *v);
extern void  glVertexAttrib1sNV(GLuint index, GLshort x);
extern void  glVertexAttrib1svNV(GLuint index, const GLshort *v);
extern void  glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y);
extern void  glVertexAttrib2dvNV(GLuint index, const GLdouble *v);
extern void  glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y);
extern void  glVertexAttrib2fvNV(GLuint index, const GLfloat *v);
extern void  glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y);
extern void  glVertexAttrib2svNV(GLuint index, const GLshort *v);
extern void  glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern void  glVertexAttrib3dvNV(GLuint index, const GLdouble *v);
extern void  glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern void  glVertexAttrib3fvNV(GLuint index, const GLfloat *v);
extern void  glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z);
extern void  glVertexAttrib3svNV(GLuint index, const GLshort *v);
extern void  glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void  glVertexAttrib4dvNV(GLuint index, const GLdouble *v);
extern void  glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glVertexAttrib4fvNV(GLuint index, const GLfloat *v);
extern void  glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern void  glVertexAttrib4svNV(GLuint index, const GLshort *v);
extern void  glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern void  glVertexAttrib4ubvNV(GLuint index, const GLubyte *v);
extern void  glVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble *v);
extern void  glVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat *v);
extern void  glVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort *v);
extern void  glVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble *v);
extern void  glVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat *v);
extern void  glVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort *v);
extern void  glVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble *v);
extern void  glVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat *v);
extern void  glVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort *v);
extern void  glVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble *v);
extern void  glVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat *v);
extern void  glVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort *v);
extern void  glVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte *v);
extern void  glVertexAttribI1iEXT(GLuint index, GLint x);
extern void  glVertexAttribI2iEXT(GLuint index, GLint x, GLint y);
extern void  glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);
extern void  glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern void  glVertexAttribI1uiEXT(GLuint index, GLuint x);
extern void  glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);
extern void  glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);
extern void  glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern void  glVertexAttribI1ivEXT(GLuint index, const GLint *v);
extern void  glVertexAttribI2ivEXT(GLuint index, const GLint *v);
extern void  glVertexAttribI3ivEXT(GLuint index, const GLint *v);
extern void  glVertexAttribI4ivEXT(GLuint index, const GLint *v);
extern void  glVertexAttribI1uivEXT(GLuint index, const GLuint *v);
extern void  glVertexAttribI2uivEXT(GLuint index, const GLuint *v);
extern void  glVertexAttribI3uivEXT(GLuint index, const GLuint *v);
extern void  glVertexAttribI4uivEXT(GLuint index, const GLuint *v);
extern void  glVertexAttribI4bvEXT(GLuint index, const GLbyte *v);
extern void  glVertexAttribI4svEXT(GLuint index, const GLshort *v);
extern void  glVertexAttribI4ubvEXT(GLuint index, const GLubyte *v);
extern void  glVertexAttribI4usvEXT(GLuint index, const GLushort *v);
extern void  glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint *params);
extern void  glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint *params);
extern void  glBeginVideoCaptureNV(GLuint video_capture_slot);
extern void  glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
extern void  glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
extern void  glEndVideoCaptureNV(GLuint video_capture_slot);
extern void  glGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint *params);
extern void  glGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
extern void  glGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
extern void  glGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
extern GLenum  glVideoCaptureNV(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
extern void  glVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
extern void  glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
extern void  glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
extern void  glHintPGI(GLenum target, GLint mode);
extern void  glDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points);
extern void  glGetDetailTexFuncSGIS(GLenum target, GLfloat *points);
extern void  glFogFuncSGIS(GLsizei n, const GLfloat *points);
extern void  glGetFogFuncSGIS(GLfloat *points);
extern void  glSampleMaskSGIS(GLclampf value, GLboolean invert);
extern void  glSamplePatternSGIS(GLenum pattern);
extern void  glPixelTexGenParameteriSGIS(GLenum pname, GLint param);
extern void  glPixelTexGenParameterivSGIS(GLenum pname, const GLint *params);
extern void  glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param);
extern void  glPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat *params);
extern void  glGetPixelTexGenParameterivSGIS(GLenum pname, GLint *params);
extern void  glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat *params);
extern void  glPointParameterfSGIS(GLenum pname, GLfloat param);
extern void  glPointParameterfvSGIS(GLenum pname, const GLfloat *params);
extern void  glSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points);
extern void  glGetSharpenTexFuncSGIS(GLenum target, GLfloat *points);
extern void  glTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
extern void  glTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern void  glGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat *weights);
extern void  glTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
extern void  glAsyncMarkerSGIX(GLuint marker);
extern GLint  glFinishAsyncSGIX(GLuint *markerp);
extern GLint  glPollAsyncSGIX(GLuint *markerp);
extern GLuint  glGenAsyncMarkersSGIX(GLsizei range);
extern void  glDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range);
extern GLboolean  glIsAsyncMarkerSGIX(GLuint marker);
extern void  glFlushRasterSGIX(void);
extern void  glFragmentColorMaterialSGIX(GLenum face, GLenum mode);
extern void  glFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param);
extern void  glFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat *params);
extern void  glFragmentLightiSGIX(GLenum light, GLenum pname, GLint param);
extern void  glFragmentLightivSGIX(GLenum light, GLenum pname, const GLint *params);
extern void  glFragmentLightModelfSGIX(GLenum pname, GLfloat param);
extern void  glFragmentLightModelfvSGIX(GLenum pname, const GLfloat *params);
extern void  glFragmentLightModeliSGIX(GLenum pname, GLint param);
extern void  glFragmentLightModelivSGIX(GLenum pname, const GLint *params);
extern void  glFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param);
extern void  glFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat *params);
extern void  glFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param);
extern void  glFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint *params);
extern void  glGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat *params);
extern void  glGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint *params);
extern void  glGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat *params);
extern void  glGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint *params);
extern void  glLightEnviSGIX(GLenum pname, GLint param);
extern void  glFrameZoomSGIX(GLint factor);
extern void  glIglooInterfaceSGIX(GLenum pname, const void *params);
extern GLint  glGetInstrumentsSGIX(void);
extern void  glInstrumentsBufferSGIX(GLsizei size, GLint *buffer);
extern GLint  glPollInstrumentsSGIX(GLint *marker_p);
extern void  glReadInstrumentsSGIX(GLint marker);
extern void  glStartInstrumentsSGIX(void);
extern void  glStopInstrumentsSGIX(GLint marker);
extern void  glGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat *params);
extern void  glGetListParameterivSGIX(GLuint list, GLenum pname, GLint *params);
extern void  glListParameterfSGIX(GLuint list, GLenum pname, GLfloat param);
extern void  glListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat *params);
extern void  glListParameteriSGIX(GLuint list, GLenum pname, GLint param);
extern void  glListParameterivSGIX(GLuint list, GLenum pname, const GLint *params);
extern void  glPixelTexGenSGIX(GLenum mode);
extern void  glDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
extern void  glDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
extern void  glDeformSGIX(GLbitfield mask);
extern void  glLoadIdentityDeformationMapSGIX(GLbitfield mask);
extern void  glReferencePlaneSGIX(const GLdouble *equation);
extern void  glSpriteParameterfSGIX(GLenum pname, GLfloat param);
extern void  glSpriteParameterfvSGIX(GLenum pname, const GLfloat *params);
extern void  glSpriteParameteriSGIX(GLenum pname, GLint param);
extern void  glSpriteParameterivSGIX(GLenum pname, const GLint *params);
extern void  glTagSampleBufferSGIX(void);
extern void  glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
extern void  glColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat *params);
extern void  glColorTableParameterivSGI(GLenum target, GLenum pname, const GLint *params);
extern void  glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern void  glGetColorTableSGI(GLenum target, GLenum format, GLenum type, void *table);
extern void  glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint *params);
extern void  glFinishTextureSUNX(void);
extern void  glGlobalAlphaFactorbSUN(GLbyte factor);
extern void  glGlobalAlphaFactorsSUN(GLshort factor);
extern void  glGlobalAlphaFactoriSUN(GLint factor);
extern void  glGlobalAlphaFactorfSUN(GLfloat factor);
extern void  glGlobalAlphaFactordSUN(GLdouble factor);
extern void  glGlobalAlphaFactorubSUN(GLubyte factor);
extern void  glGlobalAlphaFactorusSUN(GLushort factor);
extern void  glGlobalAlphaFactoruiSUN(GLuint factor);
extern void  glDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width);
extern void  glReplacementCodeuiSUN(GLuint code);
extern void  glReplacementCodeusSUN(GLushort code);
extern void  glReplacementCodeubSUN(GLubyte code);
extern void  glReplacementCodeuivSUN(const GLuint *code);
extern void  glReplacementCodeusvSUN(const GLushort *code);
extern void  glReplacementCodeubvSUN(const GLubyte *code);
extern void  glReplacementCodePointerSUN(GLenum type, GLsizei stride, const void **pointer);
extern void  glColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
extern void  glColor4ubVertex2fvSUN(const GLubyte *c, const GLfloat *v);
extern void  glColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern void  glColor4ubVertex3fvSUN(const GLubyte *c, const GLfloat *v);
extern void  glColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern void  glColor3fVertex3fvSUN(const GLfloat *c, const GLfloat *v);
extern void  glNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glNormal3fVertex3fvSUN(const GLfloat *n, const GLfloat *v);
extern void  glColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glColor4fNormal3fVertex3fvSUN(const GLfloat *c, const GLfloat *n, const GLfloat *v);
extern void  glTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
extern void  glTexCoord2fVertex3fvSUN(const GLfloat *tc, const GLfloat *v);
extern void  glTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glTexCoord4fVertex4fvSUN(const GLfloat *tc, const GLfloat *v);
extern void  glTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern void  glTexCoord2fColor4ubVertex3fvSUN(const GLfloat *tc, const GLubyte *c, const GLfloat *v);
extern void  glTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern void  glTexCoord2fColor3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *v);
extern void  glTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glTexCoord2fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *n, const GLfloat *v);
extern void  glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
extern void  glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void  glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
extern void  glReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiVertex3fvSUN(const GLuint *rc, const GLfloat *v);
extern void  glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint *rc, const GLubyte *c, const GLfloat *v);
extern void  glReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiColor3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *v);
extern void  glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *n, const GLfloat *v);
extern void  glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
extern void  glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *v);
extern void  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
extern void  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern void  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
extern void  glFogf(GLenum pname, GLfloat param);
extern void  glFogfv(GLenum pname, const GLfloat *params);
extern void  glLightModelf(GLenum pname, GLfloat param);
extern void  glLightModelfv(GLenum pname, const GLfloat *params);
extern void  glLightf(GLenum light, GLenum pname, GLfloat param);
extern void  glLightfv(GLenum light, GLenum pname, const GLfloat *params);
extern void  glLoadMatrixf(const GLfloat *m);
extern void  glMaterialf(GLenum face, GLenum pname, GLfloat param);
extern void  glMaterialfv(GLenum face, GLenum pname, const GLfloat *params);
extern void  glMatrixMode(GLenum mode);
extern void  glMultMatrixf(const GLfloat *m);
extern void  glPopMatrix(void);
extern void  glPushMatrix(void);
extern void  glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern void  glSampleCoveragex(GLclampx value, GLboolean invert);
extern void  glScalef(GLfloat x, GLfloat y, GLfloat z);
extern void  glShadeModel(GLenum mode);
extern void  glTexEnvf(GLenum target, GLenum pname, GLfloat param);
extern void  glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params);
extern void  glTranslatef(GLfloat x, GLfloat y, GLfloat z);
extern void  glGetLightfv(GLenum light, GLenum pname, GLfloat *params);
extern void  glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params);
extern void  glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params);
extern void  glGetLightxv(GLenum light, GLenum pname, GLfixed *params);
extern void  glGetMaterialxv(GLenum face, GLenum pname, GLfixed *params);
extern void  glGetTexEnviv(GLenum target, GLenum pname, GLint *params);
extern void  glTexEnvi(GLenum target, GLenum pname, GLint param);
extern void  glTexEnviv(GLenum target, GLenum pname, const GLint *params);
extern void  glPointSizePointerOES(GLenum type, GLsizei stride, const void *pointer);
extern void  glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
extern void  glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
extern void  glBlendEquationSeparateOES(GLenum modeRGB, GLenum modeAlpha);
extern void  glBlendFuncSeparateOES(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void  glBlendEquationOES(GLenum mode);
extern void  glDrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
extern void  glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height);
extern void  glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
extern void  glDrawTexsvOES(const GLshort *coords);
extern void  glDrawTexivOES(const GLint *coords);
extern void  glDrawTexxvOES(const GLfixed *coords);
extern void  glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
extern void  glDrawTexfvOES(const GLfloat *coords);
extern void  glGetLightxvOES(GLenum light, GLenum pname, GLfixed *params);
extern void  glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed *params);
extern void  glPointParameterxOES(GLenum pname, GLfixed param);
extern void  glSampleCoveragexOES(GLclampx value, GLboolean invert);
extern GLboolean  glIsRenderbufferOES(GLuint renderbuffer);
extern void  glBindRenderbufferOES(GLenum target, GLuint renderbuffer);
extern void  glDeleteRenderbuffersOES(GLsizei n, const GLuint *renderbuffers);
extern void  glGenRenderbuffersOES(GLsizei n, GLuint *renderbuffers);
extern void  glRenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glGetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint *params);
extern GLboolean  glIsFramebufferOES(GLuint framebuffer);
extern void  glBindFramebufferOES(GLenum target, GLuint framebuffer);
extern void  glDeleteFramebuffersOES(GLsizei n, const GLuint *framebuffers);
extern void  glGenFramebuffersOES(GLsizei n, GLuint *framebuffers);
extern GLenum  glCheckFramebufferStatusOES(GLenum target);
extern void  glFramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void  glFramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern void  glGetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint *params);
extern void  glGenerateMipmapOES(GLenum target);
extern void * glMapBufferOES(GLenum target, GLenum access);
extern GLboolean  glUnmapBufferOES(GLenum target);
extern void  glGetBufferPointervOES(GLenum target, GLenum pname, void **params);
extern void  glCurrentPaletteMatrixOES(GLuint matrixpaletteindex);
extern void  glLoadPaletteFromModelViewMatrixOES(void);
extern void  glMatrixIndexPointerOES(GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glWeightPointerOES(GLint size, GLenum type, GLsizei stride, const void *pointer);
extern void  glTexGenfOES(GLenum coord, GLenum pname, GLfloat param);
extern void  glTexGenfvOES(GLenum coord, GLenum pname, const GLfloat *params);
extern void  glTexGeniOES(GLenum coord, GLenum pname, GLint param);
extern void  glTexGenivOES(GLenum coord, GLenum pname, const GLint *params);
extern void  glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat *params);
extern void  glGetTexGenivOES(GLenum coord, GLenum pname, GLint *params);
extern void  glBindVertexArrayOES(GLuint array);
extern void  glDeleteVertexArraysOES(GLsizei n, const GLuint *arrays);
extern void  glGenVertexArraysOES(GLsizei n, GLuint *arrays);
extern GLboolean  glIsVertexArrayOES(GLuint array);
extern void  glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
extern void  glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glResolveMultisampleFramebufferAPPLE(void);
extern GLsync  glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
extern GLboolean  glIsSyncAPPLE(GLsync sync);
extern void  glDeleteSyncAPPLE(GLsync sync);
extern GLenum  glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern void  glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern void  glGetInteger64vAPPLE(GLenum pname, GLint64 *params);
extern void  glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
extern void  glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments);
extern void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern void  glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
extern void  glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
extern GLenum  glGetGraphicsResetStatusEXT(void);
extern void  glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
extern void  glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
extern void  glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint *params);
extern void  glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern void  glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern void  glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
extern void  glClipPlanefIMG(GLenum p, const GLfloat *eqn);
extern void  glClipPlanexIMG(GLenum p, const GLfixed *eqn);
extern void  glGetDriverControlsQCOM(GLint *num, GLsizei size, GLuint *driverControls);
extern void  glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);
extern void  glEnableDriverControlQCOM(GLuint driverControl);
extern void  glDisableDriverControlQCOM(GLuint driverControl);
extern void  glExtGetTexturesQCOM(GLuint *textures, GLint maxTextures, GLint *numTextures);
extern void  glExtGetBuffersQCOM(GLuint *buffers, GLint maxBuffers, GLint *numBuffers);
extern void  glExtGetRenderbuffersQCOM(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);
extern void  glExtGetFramebuffersQCOM(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);
extern void  glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);
extern void  glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
extern void  glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels);
extern void  glExtGetBufferPointervQCOM(GLenum target, void **params);
extern void  glExtGetShadersQCOM(GLuint *shaders, GLint maxShaders, GLint *numShaders);
extern void  glExtGetProgramsQCOM(GLuint *programs, GLint maxPrograms, GLint *numPrograms);
extern GLboolean  glExtIsProgramBinaryQCOM(GLuint program);
extern void  glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar *source, GLint *length);
extern void  glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
extern void  glEndTilingQCOM(GLbitfield preserveMask);
extern void  glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
extern GLuint  glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
extern void  glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar *message);
extern void  glPopDebugGroupKHR(void);
extern void  glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
extern void  glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
extern void  glObjectPtrLabelKHR(const void *ptr, GLsizei length, const GLchar *label);
extern void  glGetObjectPtrLabelKHR(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
extern void  glGetPointervKHR(GLenum pname, void **params);
extern GLenum  glGetGraphicsResetStatusKHR(void);
extern void  glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
extern void  glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
extern void  glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint *params);
extern void  glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
extern void  glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern void  glEnableiOES(GLenum target, GLuint index);
extern void  glDisableiOES(GLenum target, GLuint index);
extern void  glBlendEquationiOES(GLuint buf, GLenum mode);
extern void  glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern void  glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
extern void  glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void  glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern GLboolean  glIsEnablediOES(GLenum target, GLuint index);
extern void  glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void  glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void  glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
extern void  glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex);
extern void  glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern void  glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
extern void  glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void *binary, GLint length);
extern void  glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern void  glMinSampleShadingOES(GLfloat value);
extern void  glPatchParameteriOES(GLenum pname, GLint value);
extern void  glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
extern void  glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
extern void  glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void  glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
extern void  glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
extern void  glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern void  glTexParameterIivOES(GLenum target, GLenum pname, const GLint *params);
extern void  glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint *params);
extern void  glGetTexParameterIivOES(GLenum target, GLenum pname, GLint *params);
extern void  glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint *params);
extern void  glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint *param);
extern void  glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint *param);
extern void  glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint *params);
extern void  glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint *params);
extern void  glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
extern void  glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void  glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern void  glViewportArrayvOES(GLuint first, GLsizei count, const GLfloat *v);
extern void  glViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern void  glViewportIndexedfvOES(GLuint index, const GLfloat *v);
extern void  glScissorArrayvOES(GLuint first, GLsizei count, const GLint *v);
extern void  glScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern void  glScissorIndexedvOES(GLuint index, const GLint *v);
extern void  glDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat *v);
extern void  glDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f);
extern void  glGetFloati_vOES(GLenum target, GLuint index, GLfloat *data);
extern void  glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern void  glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern void  glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
extern void  glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
extern void  glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);
extern void  glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
extern void  glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
extern void  glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
extern void  glBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
extern GLint  glGetProgramResourceLocationIndexEXT(GLuint program, GLenum programInterface, const GLchar *name);
extern GLint  glGetFragDataIndexEXT(GLuint program, const GLchar *name);
extern void  glBufferStorageEXT(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
extern void  glClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
extern void  glClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
extern void  glClipControlEXT(GLenum origin, GLenum depth);
extern void  glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern void  glGenQueriesEXT(GLsizei n, GLuint *ids);
extern void  glDeleteQueriesEXT(GLsizei n, const GLuint *ids);
extern GLboolean  glIsQueryEXT(GLuint id);
extern void  glBeginQueryEXT(GLenum target, GLuint id);
extern void  glEndQueryEXT(GLenum target);
extern void  glQueryCounterEXT(GLuint id, GLenum target);
extern void  glGetQueryivEXT(GLenum target, GLenum pname, GLint *params);
extern void  glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint *params);
extern void  glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint *params);
extern void  glDrawBuffersEXT(GLsizei n, const GLenum *bufs);
extern void  glEnableiEXT(GLenum target, GLuint index);
extern void  glDisableiEXT(GLenum target, GLuint index);
extern void  glBlendEquationiEXT(GLuint buf, GLenum mode);
extern void  glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern void  glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
extern void  glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern void  glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern GLboolean  glIsEnablediEXT(GLenum target, GLuint index);
extern void  glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void  glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
extern void  glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
extern void  glDrawTransformFeedbackEXT(GLenum mode, GLuint id);
extern void  glDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount);
extern void  glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
extern void  glMultiDrawArraysIndirectEXT(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
extern void  glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
extern void  glReadBufferIndexedEXT(GLenum src, GLint index);
extern void  glDrawBuffersIndexedEXT(GLint n, const GLenum *location, const GLint *indices);
extern void  glGetIntegeri_vEXT(GLenum target, GLuint index, GLint *data);
extern void  glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern void  glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
extern void  glBindProgramPipelineEXT(GLuint pipeline);
extern GLuint  glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar **strings);
extern void  glDeleteProgramPipelinesEXT(GLsizei n, const GLuint *pipelines);
extern void  glGenProgramPipelinesEXT(GLsizei n, GLuint *pipelines);
extern void  glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
extern void  glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint *params);
extern GLboolean  glIsProgramPipelineEXT(GLuint pipeline);
extern void  glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
extern void  glValidateProgramPipelineEXT(GLuint pipeline);
extern void  glFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size);
extern GLsizei  glGetFramebufferPixelLocalStorageSizeEXT(GLuint target);
extern void  glClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, const GLuint *values);
extern void  glTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
extern void  glPatchParameteriEXT(GLenum pname, GLint value);
extern void  glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint *param);
extern void  glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint *param);
extern void  glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint *params);
extern void  glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint *params);
extern void  glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void  glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern GLuint64  glGetTextureHandleIMG(GLuint texture);
extern GLuint64  glGetTextureSamplerHandleIMG(GLuint texture, GLuint sampler);
extern void  glUniformHandleui64IMG(GLint location, GLuint64 value);
extern void  glUniformHandleui64vIMG(GLint location, GLsizei count, const GLuint64 *value);
extern void  glProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value);
extern void  glProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
extern void  glFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale);
extern void  glFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale);
extern void  glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void  glCoverageMaskNV(GLboolean mask);
extern void  glCoverageOperationNV(GLenum operation);
extern void  glDrawBuffersNV(GLsizei n, const GLenum *bufs);
extern void  glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern void  glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
extern void  glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern void  glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void  glVertexAttribDivisorNV(GLuint index, GLuint divisor);
extern void  glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
extern void  glPolygonModeNV(GLenum face, GLenum mode);
extern void  glReadBufferNV(GLenum mode);
extern void  glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat *v);
extern void  glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern void  glViewportIndexedfvNV(GLuint index, const GLfloat *v);
extern void  glScissorArrayvNV(GLuint first, GLsizei count, const GLint *v);
extern void  glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern void  glScissorIndexedvNV(GLuint index, const GLint *v);
extern void  glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat *v);
extern void  glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
extern void  glGetFloati_vNV(GLenum target, GLuint index, GLfloat *data);
extern void  glEnableiNV(GLenum target, GLuint index);
extern void  glDisableiNV(GLenum target, GLuint index);
extern GLboolean  glIsEnablediNV(GLenum target, GLuint index);
extern void  glFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
extern void  glAlphaFuncQCOM(GLenum func, GLclampf ref);
extern void  glFramebufferFoveationConfigQCOM(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint *providedFeatures);
extern void  glFramebufferFoveationParametersQCOM(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
extern void  glFramebufferFetchBarrierQCOM(void);
extern void  glTextureFoveationParametersQCOM(GLuint texture, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea);
extern void  glCallLists(GLsizei n, GLenum type, const GLvoid *lists);
extern void  glColor4fv(const GLfloat *v);
extern void  glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
extern void  glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
extern void  glEndList(void);
extern GLuint  glGenLists(GLsizei range);
extern void  glGetPolygonStipple(GLubyte *mask);
extern void  glLineStipple(GLint factor, GLushort pattern);
extern void  glListBase(GLuint base);
extern void  glNewList(GLuint list, GLenum mode);
extern void  glNormal3fv(const GLfloat *v);
extern void  glPolygonStipple(const GLubyte *mask);
extern void  glRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
extern void  glVertex2f(GLfloat x, GLfloat y);
extern void  glVertex2fv(const GLfloat *v);
extern void  glVertex3f(GLfloat x, GLfloat y, GLfloat z);
extern void  glVertex3fv(const GLfloat *v);

extern void glAlphaFunc (GLenum func, GLclampf ref);
extern void glAlphaFuncx (GLenum func, GLclampx ref);
extern void glClearColorx (GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);
extern void glClearDepthx (GLclampx depth);
extern void glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void glColor4x (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
extern void glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glDepthRangex (GLclampx zNear, GLclampx zFar);
extern void glDisableClientState (GLenum array);
extern void glEnableClientState (GLenum array);

extern void glFogx (GLenum pname, GLfixed param);
extern void glFogxv (GLenum pname, const GLfixed *params);
extern void glFrustumf (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
extern void glFrustumx (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);

extern void glLightModelx (GLenum pname, GLfixed param);
extern void glLightModelxv (GLenum pname, const GLfixed *params);

extern void glLightx (GLenum light, GLenum pname, GLfixed param);
extern void glLightxv (GLenum light, GLenum pname, const GLfixed *params);
extern void glLineWidthx (GLfixed width);
extern void glLoadIdentity (void);

extern void glLoadMatrixx (const GLfixed *m);
extern void glMaterialx (GLenum face, GLenum pname, GLfixed param);
extern void glMaterialxv (GLenum face, GLenum pname, const GLfixed *params);
extern void glMultMatrixx (const GLfixed *m);
extern void glMultiTexCoord4x (GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
extern void glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
extern void glNormal3x (GLfixed nx, GLfixed ny, GLfixed nz);
extern void glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glOrthof (GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
extern void glOrthox (GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
extern void glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern void glPointSizex (GLfixed size);
extern void glPolygonOffsetx (GLfixed factor, GLfixed units);
extern void glRotatex (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
extern void glScalex (GLfixed x, GLfixed y, GLfixed z);
extern void glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glTexEnvx (GLenum target, GLenum pname, GLfixed param);
extern void glTexEnvxv (GLenum target, GLenum pname, const GLfixed *params);
extern void glTexParameterx (GLenum target, GLenum pname, GLfixed param);
extern void glTranslatex (GLfixed x, GLfixed y, GLfixed z);
extern void glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
extern void glClipPlanef (GLenum p, const GLfloat *eqn);
extern void glGetClipPlanef (GLenum plane, GLfloat *equation);
extern void glClipPlanex (GLenum plane, const GLfixed *equation);
extern void glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
extern void glDrawArrays (GLenum mode, GLint first, GLsizei count);
extern void glGetClipPlanex (GLenum plane, GLfixed *equation);
extern void glGetFixedv (GLenum pname, GLfixed *params);
extern void glGetTexEnvxv (GLenum target, GLenum pname, GLfixed *params);
extern void glGetTexParameterxv (GLenum target, GLenum pname, GLfixed *params);
extern void glPointParameterx (GLenum pname, GLfixed param);
extern void glPointParameterxv (GLenum pname, const GLfixed *params);
extern void glTexParameterxv (GLenum target, GLenum pname, const GLfixed *params);
extern void glBlendBarrier (void);
extern void glPrimitiveBoundingBox (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
extern void glBegin (GLenum mode);
extern void glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
extern void glEnd (void);
extern void glColor3fv(const GLfloat *v);

extern void glRasterPos2d(GLdouble x, GLdouble y);

extern void glRasterPos2dv(const GLdouble * v);

extern void glRasterPos2f(GLfloat x, GLfloat y);

extern void glRasterPos2fv(const GLfloat * v);

extern void glRasterPos2i(GLint x, GLint y);

extern void glRasterPos2iv(const GLint * v);

extern void glRasterPos2s(GLshort x, GLshort y);

extern void glRasterPos2sv(const GLshort * v);

extern void glRasterPos3d(GLdouble x, GLdouble y, GLdouble z);

extern void glRasterPos3dv(const GLdouble * v);

extern void glRasterPos3fv(const GLfloat * v);

extern void glRasterPos3i(GLint x, GLint y, GLint z);

extern void glRasterPos3iv(const GLint * v);

extern void glRasterPos3s(GLshort x, GLshort y, GLshort z);

extern void glRasterPos3sv(const GLshort * v);

extern void glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);

extern void glRasterPos4dv(const GLdouble * v);

extern void glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);

extern void glRasterPos4fv(const GLfloat * v);

extern void glRasterPos4i(GLint x, GLint y, GLint z, GLint w);
extern void glRasterPos4iv(const GLint * v);
extern void glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
extern void glRasterPos4sv(const GLshort * v);

extern void glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);

extern void glRectdv(const GLdouble * v1, const GLdouble * v2);

extern void glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);

extern void glRectfv(const GLfloat * v1, const GLfloat * v2);

extern void glRecti(GLint x1, GLint y1, GLint x2, GLint y2);

extern void glRectiv(const GLint * v1, const GLint * v2);

extern void glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);

extern void glRectsv(const GLshort * v1, const GLshort * v2);

extern void glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);

extern void glAccum(GLenum op, GLfloat value);
extern GLboolean glAreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences);
extern void glArrayElement(GLint i);
extern void glCallList(GLuint list);
extern void glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern void glClearIndex(GLfloat c);
extern void glClipPlane(GLenum plane, const GLdouble * equation);
extern void glColor3b(GLbyte red, GLbyte green, GLbyte blue);
extern void glColor3bv(const GLbyte * v);
extern void glColor3d(GLdouble red, GLdouble green, GLdouble blue);
extern void glColor3dv(const GLdouble * v);
extern void glColor3f(GLfloat red, GLfloat green, GLfloat blue);
extern void glColor3i(GLint red, GLint green, GLint blue);
extern void glColor3iv(const GLint * v);
extern void glColor3s(GLshort red, GLshort green, GLshort blue);
extern void glColor3sv(const GLshort * v);
extern void glColor3ub(GLubyte red, GLubyte green, GLubyte blue);
extern void glColor3ubv(const GLubyte * v);
extern void glColor3ui(GLuint red, GLuint green, GLuint blue);
extern void glColor3uiv(const GLuint * v);
extern void glColor3us(GLushort red, GLushort green, GLushort blue);
extern void glColor3usv(const GLushort * v);
extern void glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
extern void glColor4bv(const GLbyte * v);
extern void glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
extern void glColor4dv(const GLdouble * v);
extern void glColor4i(GLint red, GLint green, GLint blue, GLint alpha);
extern void glColor4iv(const GLint * v);
extern void glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
extern void glColor4sv(const GLshort * v);
extern void glColor4ubv(const GLubyte * v);
extern void glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern void glColor4uiv(const GLuint * v);
extern void glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
extern void glColor4usv(const GLushort * v);
extern void glColorMaterial(GLenum face, GLenum mode);
extern void glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
extern void glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
extern void glDeleteLists(GLuint list, GLsizei range);
extern void glEdgeFlag(GLboolean flag);
extern void glEdgeFlagPointer(GLsizei stride, const void * pointer);
extern void glEdgeFlagv(const GLboolean * flag);
extern void glEvalCoord1d(GLdouble u);
extern void glEvalCoord1dv(const GLdouble * u);
extern void glEvalCoord1f(GLfloat u);
extern void glEvalCoord1fv(const GLfloat * u);
extern void glEvalCoord2d(GLdouble u, GLdouble v);
extern void glEvalCoord2dv(const GLdouble * u);
extern void glEvalCoord2f(GLfloat u, GLfloat v);
extern void glEvalCoord2fv(const GLfloat * u);
extern void glEvalMesh1(GLenum mode, GLint i1, GLint i2);
extern void glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
extern void glEvalPoint1(GLint i);
extern void glEvalPoint2(GLint i, GLint j);
extern void glFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer);
extern void glFogi(GLenum pname, GLint param);
extern void glFogiv(GLenum pname, const GLint * params);
extern void glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern void glGetClipPlane(GLenum plane, GLdouble * equation);
extern void glGetLightiv(GLenum light, GLenum pname, GLint * params);
extern void glGetMapdv(GLenum target, GLenum query, GLdouble * v);
extern void glGetMapfv(GLenum target, GLenum query, GLfloat * v);
extern void glGetMapiv(GLenum target, GLenum query, GLint * v);
extern void glGetMaterialiv(GLenum face, GLenum pname, GLint * params);
extern void glGetPixelMapfv(GLenum map, GLfloat * values);
extern void glGetPixelMapuiv(GLenum map, GLuint * values);
extern void glGetPixelMapusv(GLenum map, GLushort * values);
extern void glGetTexGendv(GLenum coord, GLenum pname, GLdouble * params);
extern void glGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params);
extern void glGetTexGeniv(GLenum coord, GLenum pname, GLint * params);
extern void glIndexMask(GLuint mask);
extern void glIndexPointer(GLenum type, GLsizei stride, const void * pointer);
extern void glIndexd(GLdouble c);
extern void glIndexdv(const GLdouble * c);
extern void glIndexf(GLfloat c);
extern void glIndexfv(const GLfloat * c);
extern void glIndexi(GLint c);
extern void glIndexiv(const GLint * c);
extern void glIndexs(GLshort c);
extern void glIndexsv(const GLshort * c);
extern void glIndexub(GLubyte c);
extern void glIndexubv(const GLubyte * c);
extern void glInitNames(void);
extern void glInterleavedArrays(GLenum format, GLsizei stride, const void * pointer);
extern GLboolean glIsList(GLuint list);
extern void glLightModeli(GLenum pname, GLint param);
extern void glLightModeliv(GLenum pname, const GLint * params);
extern void glLighti(GLenum light, GLenum pname, GLint param);
extern void glLightiv(GLenum light, GLenum pname, const GLint * params);
extern void glLoadMatrixd(const GLdouble * m);
extern void glLoadName(GLuint name);
extern void glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
extern void glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
extern void glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
extern void glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
extern void glMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
extern void glMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
extern void glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
extern void glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
extern void glMateriali(GLenum face, GLenum pname, GLint param);
extern void glMaterialiv(GLenum face, GLenum pname, const GLint * params);
extern void glMultMatrixd(const GLdouble * m);
extern void glMultiDrawElementsBaseVertexOES(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex);
extern void glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz);
extern void glNormal3bv(const GLbyte * v);
extern void glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz);
extern void glNormal3dv(const GLdouble * v);
extern void glNormal3i(GLint nx, GLint ny, GLint nz);
extern void glNormal3iv(const GLint * v);
extern void glNormal3s(GLshort nx, GLshort ny, GLshort nz);
extern void glNormal3sv(const GLshort * v);
extern void glPassThrough(GLfloat token);
extern void glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values);
extern void glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values);
extern void glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values);
extern void glPixelTransferf(GLenum pname, GLfloat param);
extern void glPixelTransferi(GLenum pname, GLint param);
extern void glPixelZoom(GLfloat xfactor, GLfloat yfactor);
extern void glPopAttrib(void);
extern void glPopClientAttrib(void);
extern void glPopName(void);
extern void glPrioritizeTextures(GLsizei n, const GLuint * textures, const GLfloat * priorities);
extern void glPushAttrib(GLbitfield mask);
extern void glPushClientAttrib(GLbitfield mask);
extern void glPushName(GLuint name);
extern GLint glRenderMode(GLenum mode);
extern void glScaled(GLdouble x, GLdouble y, GLdouble z);
extern void glSelectBuffer(GLsizei size, GLuint * buffer);
extern void glTexCoord1d(GLdouble s);
extern void glTexCoord1dv(const GLdouble * v);
extern void glTexCoord1f(GLfloat s);
extern void glTexCoord1fv(const GLfloat * v);
extern void glTexCoord1i(GLint s);
extern void glTexCoord1iv(const GLint * v);
extern void glTexCoord1s(GLshort s);
extern void glTexCoord1sv(const GLshort * v);
extern void glTexCoord2d(GLdouble s, GLdouble t);
extern void glTexCoord2dv(const GLdouble * v);
extern void glTexCoord2f(GLfloat s, GLfloat t);
extern void glTexCoord2fv(const GLfloat * v);
extern void glTexCoord2i(GLint s, GLint t);
extern void glTexCoord2iv(const GLint * v);
extern void glTexCoord2s(GLshort s, GLshort t);
extern void glTexCoord2sv(const GLshort * v);
extern void glTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
extern void glTexCoord3dv(const GLdouble * v);
extern void glTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
extern void glTexCoord3fv(const GLfloat * v);
extern void glTexCoord3i(GLint s, GLint t, GLint r);
extern void glTexCoord3iv(const GLint * v);
extern void glTexCoord3s(GLshort s, GLshort t, GLshort r);
extern void glTexCoord3sv(const GLshort * v);
extern void glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern void glTexCoord4dv(const GLdouble * v);
extern void glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern void glTexCoord4fv(const GLfloat * v);
extern void glTexCoord4i(GLint s, GLint t, GLint r, GLint q);
extern void glTexCoord4iv(const GLint * v);
extern void glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
extern void glTexCoord4sv(const GLshort * v);
extern void glTexGend(GLenum coord, GLenum pname, GLdouble param);
extern void glTexGendv(GLenum coord, GLenum pname, const GLdouble * params);
extern void glTexGenf(GLenum coord, GLenum pname, GLfloat param);
extern void glTexGenfv(GLenum coord, GLenum pname, const GLfloat * params);
extern void glTexGeni(GLenum coord, GLenum pname, GLint param);
extern void glTexGeniv(GLenum coord, GLenum pname, const GLint * params);
extern void glTranslated(GLdouble x, GLdouble y, GLdouble z);
extern void glVertex2d(GLdouble x, GLdouble y);
extern void glVertex2dv(const GLdouble * v);
extern void glVertex2i(GLint x, GLint y);
extern void glVertex2iv(const GLint * v);
extern void glVertex2s(GLshort x, GLshort y);
extern void glVertex2sv(const GLshort * v);
extern void glVertex3d(GLdouble x, GLdouble y, GLdouble z);
extern void glVertex3dv(const GLdouble * v);
extern void glVertex3i(GLint x, GLint y, GLint z);
extern void glVertex3iv(const GLint * v);
extern void glVertex3s(GLshort x, GLshort y, GLshort z);
extern void glVertex3sv(const GLshort * v);
extern void glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern void glVertex4dv(const GLdouble * v);
extern void glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern void glVertex4fv(const GLfloat * v);
extern void glVertex4i(GLint x, GLint y, GLint z, GLint w);
extern void glVertex4iv(const GLint * v);
extern void glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
extern void glVertex4sv(const GLshort * v);


#endif
