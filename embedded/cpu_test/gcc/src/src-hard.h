#define MAXLINE  61
static char in_buf[MAXLINE][256] = {
"double fvalue0 = 12.3456;",
"double fvalue1 = 999.0123;",
"",
"int foo(double fv);",
"",
"typedef struct t_test_struct {",
"  struct t_test_struct * next;",
"  long value;",
"  char desc[100];",
"} TestStruct;",
"",
"main()",
"{",
"  int a=2, i;",
"  int b=3;",
"  char c;",
"",
"  for(i=0, b = 3; i<10; i++)",
"    {",
"      b= a++ + i;",
"      c = '0' + i;",
"    }",
"  printf(\"abcd!!!sss=%d\n\", a+b); ",
"  printf(\"Hello world\n\");",
"  c = getchar();",
"  switch (c) ",
"    {",
"    case '0':",
"    case '1': printf(\"less than one\n\"); break;",
"    case '2': i = c < b ? 'a' : 'z'; break;",
"    default: i = a + b; printf(\"%d\n\", i); break;",
"    }",
"  printf(\"The result is %10.3f\n\", fvalue0 + fvalue1);",
"",
"  if (foo(fvalue0 + fvalue1)) {",
"    return i;",
"  } else {",
"    return 0;",
"  }",
"}",
"",
"int foo(double fv) {",
"  unsigned long nTmp;",
"  TestStruct head;",
"  TestStruct * p = &head;",
"  int i;",
"",
"  head.value = 0;",
"  strcpy(head.desc, \"\");",
"",
"  nTmp = (unsigned long)fv;",
"",
"  for (i = 0; i < nTmp; i ++) {",
"    p->next = (TestStruct*)malloc(sizeof(TestStruct));",
"    p = p ->next;",
"    p->value = 10000 % i;",
"    strcpy(p->desc, \"test string\");",
"  }",
"",
"  return head.next->next->next->value;",
"}",
};
int l_p=0, c_p=0;
static int cols_in_line[MAXLINE];
static int first = 0;
